#!/bin/bash

pod() {
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port 'cd e2e-openshift && bash Openshift-EE/pipelines/stages/4-chaos/4LC02-localpv-hostpath-app-kill/app-kill node '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"' '"'$RELEASE_TAG'"'
}

node() {
job_id=$(echo $1) #Gitlab job id obtain from the gitlab env ($CI_JOB_ID).
pipeline_id=$(echo $2) # Gitlab pipeline id obtained from gitlab env ($CI_PIPELINE_ID).
commit_id=$(echo $3) #Gitlab commit id Obtained fron gilab env ($CI_COMMIT_SHA).
releaseTag=$(echo $4)
source ~/.profile
#github token to push the test result into github mayadata-io/e2e-openshift repository.
#This token is set as an env in ~/.profile in the test cluster.
gittoken=$(echo "$github_token")
case_id=4LC02  #test case ID.

time="date"
current_time=$(eval $time)

present_dir=$(pwd)
echo $present_dir
#Creating e2e custom resource result for the test.
bash Openshift-EE/utils/e2e-cr jobname:localpv-hostpath-app-kill jobphase:Waiting
bash Openshift-EE/utils/e2e-cr jobname:localpv-hostpath-app-kill jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag"

################
# LitmusBook 1 #
################

run_id="localpv-hostpath";test_name=$(bash Openshift-EE/utils/generate_test_name testcase=busybox-provision-hostpath-app-kill metadata=${run_id})
echo $test_name

cd e2e-tests
echo "Running the litmus test for Busybox Deployment.."
# copy the content of deployer run_litmus_test.yml into a different file to update the test specific parameters.
cp apps/busybox/deployers/run_litmus_test.yml busybox_hostpath_app_kill.yml

sed -i -e 's/app: busybox-litmus/app: busybox-localpv-hostpath-app-kill/g' \
-e 's/value: statefulset/value: deployment/g' \
-e 's/value: openebs-cstor-sparse/value: openebs-hostpath/g' \
-e 's/value: app-busybox-ns/value: hostpath-app-kill/g' busybox_hostpath_app_kill.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' busybox_hostpath_app_kill.yml

cat busybox_hostpath_app_kill.yml

# Run the Litmus job and get the details of the litmus job from litmus_job_runner utils.

bash ../Openshift-EE/utils/litmus_job_runner label='app:busybox-localpv-hostpath-app-kill' job=busybox_hostpath_app_kill.yml
cd ..
# Get the cluster state Once the litmus jobs completed.
bash Openshift-EE/utils/dump_cluster_state;
# Update the e2e event for the job.
bash Openshift-EE/utils/event_updater jobname:localpv-hostpath-app-kill $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

if [ "$?" != "0" ]; then
exit 1;
fi

################
# LitmusBook 2 #
################

run_id="localpv-hostpath-app-kill";test_name=$(bash Openshift-EE/utils/generate_test_name testcase=busybox-liveness metadata=${run_id})
echo $test_name

cd e2e-tests
# copy the content of deployer run_litmus_test.yml into a different file to update the test specific parameters.
cp apps/busybox/liveness/run_litmus_test.yml liveness_hostpath_localpv_app_kill.yml

# Update the environmental variables in litmus job spec.

sed -i -e 's/value: app-busybox-ns/value: hostpath-app-kill/g' \
-e 's/liveness: litmus-busybox-liveness/liveness: hostpath-localpv-app-kill/g' liveness_hostpath_localpv_app_kill.yml

cat liveness_hostpath_localpv_app_kill.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' liveness_hostpath_localpv_app_kill.yml

# Run the Litmus job and get the details of the litmus job from litmus_job_runner utils.
bash ../Openshift-EE/utils/litmus_job_runner label='liveness:hostpath-localpv-app-kill' job=liveness_hostpath_localpv_app_kill.yml
cd ..
# Get the cluster state Once the litmus jobs completed.
bash Openshift-EE/utils/dump_cluster_state;
# Update the e2e event for the job.
bash Openshift-EE/utils/event_updater jobname:localpv-hostpath-app-kill $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

if [ "$?" != "0" ]; then
exit 1;
fi

################
# LitmusBook 3 #
################

# Performing Application Pod Chaos

run_id="localpv-hostpath";test_name=$(bash Openshift-EE/utils/generate_test_name testcase=application-pod-failure metadata=${run_id})
echo $test_name

cd e2e-tests
# copy the content of deployer run_litmus_test.yml into a different file to update the test specific parameters.
cp experiments/chaos/app_pod_failure/run_litmus_test.yml hostpath_app_kill.yml

sed -i -e 's/app=jenkins-app/app=busybox-sts/g' \
-e 's/name: app-failure/name: hostpath-app-kill-cm/g' \
-e 's/name: application-pod-failure/name: localpv-hostpath-app-kill/g' \
-e 's/value: docker/value: cri-o/g' \
-e 's/value: app-jenkins-ns/value: hostpath-app-kill/g' hostpath_app_kill.yml

## Replace the value of DATA_PERSISTENCE with application name in litmus experiment. 
sed -i '/name: DATA_PERSISTENCE/{n;s/.*/            value: busybox/}' hostpath_app_kill.yml

## Insert the set of variables for busybox data consistency util into configmap spec.
sed -i '/parameters.yml: |/a \
    blocksize: 4k\
    blockcount: 1024\
    testfile: hostpath_app_kill
' hostpath_app_kill.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' hostpath_app_kill.yml

echo "Running the litmus test for Busybox Deployment application pod kill.."
cat hostpath_app_kill.yml

bash ../Openshift-EE/utils/litmus_job_runner label='name:localpv-hostpath-app-kill' job=hostpath_app_kill.yml
cd ..
# Get the cluster state Once the litmus jobs completed.
bash Openshift-EE/utils/dump_cluster_state;
bash Openshift-EE/utils/event_updater jobname:localpv-hostpath-app-kill $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

# Update result of the test case in github mayadata-io/e2e-openshift repository.
if [ "$?" != "0" ]; then
exit 1;
fi

################
# LitmusBook 4 #
################

run_id="deprovision-hostpath-app-kill";test_name=$(bash Openshift-EE/utils/generate_test_name testcase=busybox-liveness metadata=${run_id})
echo $test_name

cd e2e-tests
# copy the content of deployer run_litmus_test.yml into a different file to update the test specific parameters.
cp apps/busybox/liveness/run_litmus_test.yml liveness_dep_hostpath_app_kill.yml

sed -i -e 's/value: app-busybox-ns/value: hostpath-app-kill/g' \
-e 's/value: provision/value: deprovision/g' \
-e 's/generateName: litmus-busybox-liveness/generateName: liveness-dep-hostpath-app-kill/g' \
-e 's/liveness: litmus-busybox-liveness/liveness: liveness-dep-hostpath-app-kill/g' liveness_dep_hostpath_app_kill.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' liveness_dep_hostpath_app_kill.yml

cat liveness_dep_hostpath_app_kill.yml
# Run the Litmus job and get the details of the litmus job from litmus_job_runner utils.
bash ../Openshift-EE/utils/litmus_job_runner label='liveness:liveness-dep-hostpath-app-kill' job=liveness_dep_hostpath_app_kill.yml
cd ..
# Get the cluster state Once the litmus jobs completed.
bash Openshift-EE/utils/dump_cluster_state;
bash Openshift-EE/utils/event_updater jobname:localpv-hostpath-app-kill $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

rc_val=$(echo $?)

# Update result of the test case in github mayadata-io/e2e-openshift repository.
if [ "$rc_val" != "0" ]; then
exit 1;
fi

################
# LitmusBook 5 #
################

run_id="localpv-hostpath";test_name=$(bash Openshift-EE/utils/generate_test_name testcase=busybox-deprovision-hostpath-app-kill metadata=${run_id})
echo $test_name

cd e2e-tests
# copy the content of deployer run_litmus_test.yml into a different file to update the test specific parameters.
cp apps/busybox/deployers/run_litmus_test.yml deprovision_hostpath_app_kill.yml

sed -i -e 's/generateName: litmus-busybox-deploy/generateName: busybox-deprovision-hostpath-app-kill/g' \
-e 's/app: busybox-litmus/app: busybox-deprovision-hostpath-app-kill/g' \
-e 's/value: statefulset/value: deployment/g' \
-e 's/value: openebs-cstor-sparse/value: openebs-hostpath/g' \
-e 's/value: app-busybox-ns/value: hostpath-app-kill/g' \
-e 's/value: provision/value: deprovision/g' deprovision_hostpath_app_kill.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' deprovision_hostpath_app_kill.yml

# Running the litmus test for Busybox Deprovision
cat deprovision_hostpath_app_kill.yml
# Run the Litmus job and get the details of the litmus job from litmus_job_runner utils.
bash ../Openshift-EE/utils/litmus_job_runner label='app:busybox-deprovision-hostpath-app-kill' job=deprovision_hostpath_app_kill.yml
cd ..
# Get the cluster state Once the litmus jobs completed.
bash Openshift-EE/utils/dump_cluster_state;
bash Openshift-EE/utils/event_updater jobname:localpv-hostpath-app-kill $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

rc_val=$(echo $?)
current_time=$(eval $time)

# Update result of the test case in github mayadata-io/e2e-openshift repository.
if [ "$rc_val" != "0" ]; then
bash Openshift-EE/utils/e2e-cr jobname:localpv-hostpath-app-kill jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:Fail
exit 1;
fi

bash Openshift-EE/utils/e2e-cr jobname:localpv-hostpath-app-kill jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:Pass

if [ "$rc_val" != "0" ]; then
exit 1;
fi
}

if [ "$1" == "node" ];then
  node $2 $3 $4 $5
else
  pod
fi
