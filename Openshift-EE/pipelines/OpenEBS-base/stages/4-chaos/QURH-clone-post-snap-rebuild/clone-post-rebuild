#!/bin/bash
set -x

pod() {
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port 'cd e2e-openshift && bash Openshift-EE/pipelines/OpenEBS-base/stages/4-chaos/QURH-clone-post-snap-rebuild/clone-post-rebuild node '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"'
}

node() {
job_id=$(echo $1)
pipeline_id=$(echo $2)
commit_id=$(echo $3)
case_id=QURH

source ~/.profile
gittoken=$(echo "$github_token")

time="date"
current_time=$(eval $time)

present_dir=$(pwd)
echo $present_dir

#bash Openshift-EE/utils/e2e-cr jobname:clone-post-snap-rebuild jobphase:Waiting
bash Openshift-EE/utils/pooling jobname:snap-rebuild-multiple-rep
bash Openshift-EE/utils/e2e-cr jobname:clone-post-snap-rebuild jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"
#bash Openshift-EE/utils/e2e-cr jobname:clone-during-snap-rebuild jobphase:Waiting
#bash Openshift-EE/utils/e2e-cr jobname:clone-pre-snap-rebuild jobphase:Waiting

echo "*******Deploying Busybox Application****"

test_name=$(bash Openshift-EE/utils/generate_test_name testcase=busybox-provision-post-rebuild metadata="")
echo $test_name

cd litmus
echo "Running the litmus test for Busybox Deployment.."

cp apps/busybox/deployers/run_litmus_test.yml busybox_post_rebuild.yml

sed -i -e 's/app: busybox-litmus/app: deploy-busybox-post-rebuild/g' \
-e 's/app=busybox-sts/app=post-rebuild/g' \
-e 's/value: openebs-cstor-sparse/value: openebs-cstor-disk/g' \
-e 's/value: statefulset/value: deployment/g' \
-e 's/value: openebs-busybox/value: busybox-post-rebuild/g' \
-e 's/value: app-busybox-ns/value: post-rebuild/g' busybox_post_rebuild.yml
cat busybox_post_rebuild.yml

bash ../Openshift-EE/utils/litmus_job_runner label='app:deploy-busybox-post-rebuild' job=busybox_post_rebuild.yml
cd ..
bash Openshift-EE/utils/dump_cluster_state;
bash Openshift-EE/utils/event_updater jobname:clone-post-snap-rebuild $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

if [ "$?" != "0" ]; then
python3 Openshift-EE/utils/result/result_update.py $job_id $case_id 4-chaos "Check if the clone can be created after snapshot rebuilt successfully" Fail $pipeline_id "$current_time" $commit_id $gittoken
exit 1;
fi

test_name=$(bash Openshift-EE/utils/generate_test_name testcase=k8s-snapshot-rebuild-clone metadata="")
echo $test_name

cd litmus
cp experiments/functional/clone-snapshot-rebuild/run_litmus_test.yml run_post_rebuild.yml

sed -i -e 's/app=busybox-sts/app=post-rebuild/g' \
-e 's/value: openebs-busybox/value: busybox-post-rebuild/g' \
-e 's/value: app-busybox-ns/value: post-rebuild/g' run_post_rebuild.yml

cat run_post_rebuild.yml

bash ../Openshift-EE/utils/litmus_job_runner label='app:k8s-snap-rebuild-clone' job=run_post_rebuild.yml
cd ..
bash Openshift-EE/utils/dump_cluster_state;
bash Openshift-EE/utils/event_updater jobname:clone-post-snap-rebuild $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

if [ "$?" != "0" ]; then
python3 Openshift-EE/utils/result/result_update.py $job_id $case_id 4-chaos "Check if the clone can be created after snapshot rebuilt successfully" Fail $pipeline_id "$current_time" $commit_id $gittoken
exit 1;
fi

current_time=$(eval $time)

python3 Openshift-EE/utils/result/result_update.py $job_id $case_id 4-chaos "Check if the clone can be created after snapshot rebuilt successfully" Pass $pipeline_id "$current_time" $commit_id $gittoken

}

if [ "$1" == "node" ];then
  node $2 $3 $4
else
  pod
fi
