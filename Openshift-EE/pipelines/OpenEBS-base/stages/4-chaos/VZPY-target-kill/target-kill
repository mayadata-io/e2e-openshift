#!/bin/bash
set -x

pod() {
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port 'cd e2e-openshift && bash Openshift-EE/pipelines/OpenEBS-base/stages/4-chaos/VZPY-target-kill/target-kill node '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"'
}

node() {
source ~/.profile
gittoken=$(echo "$github_token")

job_id=$(echo $1)
pipeline_id=$(echo $2)
commit_id=$(echo $3)
case_id=VZPY

time="date"
current_time=$(eval $time)

present_dir=$(pwd)
echo $present_dir

bash Openshift-EE/utils/e2e-cr jobname:target-kill jobphase:Waiting init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"
bash Openshift-EE/utils/e2e-cr jobname:target-kill jobphase:Running init_time:"$current_time"

echo "*******Deploying Busybox Application****"

test_name=$(bash Openshift-EE/utils/generate_test_name testcase=busybox-provision-target-kill metadata="")
echo $test_name

cd litmus
echo "Running the litmus test for Busybox Deployment.."

cp apps/busybox/deployers/run_litmus_test.yml busybox_target_kill.yml

sed -i -e 's/app: busybox-litmus/app: deploy-busybox-target-kill/g' \
-e 's/app=busybox-sts/app=target-kill/g' \
-e 's/value: statefulset/value: deployment/g' \
-e 's/value: openebs-cstor-sparse/value: openebs-cstor-disk/g' \
-e 's/value: openebs-busybox/value: openebs-bb-targetkill/g' \
-e 's/value: app-busybox-ns/value: target-kill/g' busybox_target_kill.yml
cat busybox_target_kill.yml

bash ../Openshift-EE/utils/litmus_job_runner label='app:deploy-busybox-target-kill' job=busybox_target_kill.yml
cd ..
bash Openshift-EE/utils/dump_cluster_state;
bash Openshift-EE/utils/event_updater jobname:target-kill $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

if [ "$?" != "0" ]; then
python3 Openshift-EE/utils/result/result_update.py $job_id VZPY 4-chaos "Induce failure on cstor-target pod and check if it gets scheduled immediately and the application is available" Fail $pipeline_id "$current_time" $commit_id $gittoken
exit 1;
fi

echo "*******Scaling Application replicas**********"

run_id="delete";test_name=$(bash Openshift-EE/utils/generate_test_name testcase=openebs-target-failure metadata=${run_id})
echo $test_name

cd litmus
cp experiments/chaos/openebs_target_failure/run_litmus_test.yml run_targetkill_test.yml

sed -i -e 's/value: percona-mysql-claim/value: openebs-bb-targetkill/g' \
-e 's/value: '\''name=percona'\''/value: '\''app=target-kill'\''/g' \
-e 's/target-zrepl-kill/target-delete/g' \
-e 's/value: app-percona-ns/value: target-kill/g' run_targetkill_test.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' run_targetkill_test.yml

echo "Running the litmus test for Busybox Deployment Scaleup.."
cat run_targetkill_test.yml

bash ../Openshift-EE/utils/litmus_job_runner label='name:openebs-target-failure' job=run_targetkill_test.yml
cd ..
bash Openshift-EE/utils/dump_cluster_state;
bash Openshift-EE/utils/event_updater jobname:target-kill $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

if [ "$?" != "0" ]; then
python3 Openshift-EE/utils/result/result_update.py $job_id VZPY 4-chaos "Induce failure on cstor-target pod and check if it gets scheduled immediately and the application is available" Fail $pipeline_id "$current_time" $commit_id $gittoken
exit 1;
fi

echo "********Deprovisioning Busybox Application*******"

test_name=$(bash Openshift-EE/utils/generate_test_name testcase=busybox-deprovision-target-kill metadata="")
echo $test_name

cd litmus
cp apps/busybox/deployers/run_litmus_test.yml deprovision_target_kill.yml

sed -i -e 's/generateName: litmus-busybox-deploy/generateName: busybox-deprovision-target-kill/g' \
-e 's/app: busybox-litmus/app: busybox-deprovision-target-kill/g' \
-e 's/app=busybox-sts/app=target-kill/g' \
-e 's/value: statefulset/value: deployment/g' \
-e 's/value: openebs-cstor-sparse/value: openebs-cstor-disk/g' \
-e 's/value: openebs-busybox/value: openebs-bb-targetkill/g' \
-e 's/value: app-busybox-ns/value: target-kill/g' \
-e 's/value: provision/value: deprovision/g' deprovision_target_kill.yml

echo "Running the litmus test for Busybox Deployment.."
cat deprovision_target_kill.yml

bash ../Openshift-EE/utils/litmus_job_runner label='app:busybox-deprovision-target-kill' job=deprovision_target_kill.yml
cd ..
bash Openshift-EE/utils/dump_cluster_state;
bash Openshift-EE/utils/event_updater jobname:target-kill $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

rc_val=$(echo $?)


# testResult=$(kubectl get litmusresult ${test_name} --no-headers -o custom-columns=:spec.testStatus.result)

# if [ "$rc_val" != "0" ]; then
# exit 1;
# fi

current_time=$(eval $time)
bash Openshift-EE/utils/e2e-cr jobname:target-kill jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" test_result:Pass
python3 Openshift-EE/utils/result/result_update.py $job_id VZPY 4-chaos "Induce failure on cstor-target pod and check if it gets scheduled immediately and the application is available" Pass $pipeline_id "$current_time" $commit_id $gittoken

}

if [ "$1" == "node" ];then
  node $2 $3 $4
else
  pod
fi
