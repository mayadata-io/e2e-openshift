#!/bin/bash


pod(){
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port 'cd e2e-openshift && bash Openshift-EE/pipelines/OpenEBS-base/stages/4-jiva-csi-functional/JCSI12-jiva-csi-volume-resize/jiva-csi-volume-resize node '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"' '"'$RELEASE_TAG'"'
}

node() {
source ~/.profile
gittoken=$(echo "$github_token")
job_id=$(echo $1)
pipeline_id=$(echo $2)
commit_id=$(echo $3)
releaseTag=$(echo $4)
case_id=JCSI12

time="date"
current_time=$(eval $time)

present_dir=$(pwd)
echo $present_dir

bash Openshift-EE/utils/e2e-cr jobname:csi-volume-resize jobphase:Waiting
bash Openshift-EE/utils/e2e-cr jobname:csi-volume-resize jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag"

################
# LitmusBook 1 #
################

echo "****Deploying busybox Application using CSI****"

run_id="csi";test_name=$(bash Openshift-EE/utils/generate_test_name testcase=busybox-provision-busybox-csi metadata=${run_id})
echo $test_name

cd litmus
echo "Running the litmus test for busybox Deployment.."
cp apps/busybox/deployers/run_litmus_test.yml deploy_csi_busybox.yml

sed -i -e 's/value: app-busybox-ns/value: busybox-csi/g' \
-e 's/app: busybox-litmus/app: busybox-litmus-csi/g' \
-e 's/generateName: litmus-busybox-deploy-/generateName: litmus-busybox-csi-/g' \
-e 's/value: statefulset/value: deployment/g' \
-e 's/value: openebs-cstor-sparse/value: jiva-csi-sc/g' deploy_csi_busybox.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' deploy_csi_busybox.yml

cat deploy_csi_busybox.yml

bash ../Openshift-EE/utils/litmus_job_runner label='app:busybox-litmus-csi' job=deploy_csi_busybox.yml
cd ..
bash Openshift-EE/utils/dump_cluster_state;
bash Openshift-EE/utils/event_updater jobname:csi-volume-resize $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

if [ "$?" != "0" ]; then
python3 Openshift-EE/utils/result/result_update.py $job_id JCSI12 4-jiva-csi-functional "Provision application using CSI with fsType ext4 and verify the status" Fail $pipeline_id "$current_time" $commit_id $gittoken
exit 1;
fi

################
# LitmusBook 2 #
################

echo "****Busybox liveness****"

run_id="csi";test_name=$(bash Openshift-EE/utils/generate_test_name testcase=busybox-liveness metadata=${run_id})
echo $test_name

cd litmus
echo "Running the litmus test for busybox liveness..."
cp apps/busybox/liveness/run_litmus_test.yml liveness_csi_busybox.yml

sed -i -e 's/liveness: litmus-busybox-liveness/liveness: litmus-busybox-csi-liveness/g' \
-e 's/generateName: litmus-busybox-liveness-/generateName: litmus-busybox-csi-liveness-/g' \
-e 's/value: app-busybox-ns/value: busybox-csi/g' liveness_csi_busybox.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' liveness_csi_busybox.yml

cat liveness_csi_busybox.yml

bash ../Openshift-EE/utils/litmus_job_runner label='liveness:litmus-busybox-csi-liveness' job=liveness_csi_busybox.yml
cd ..
bash Openshift-EE/utils/dump_cluster_state;
bash Openshift-EE/utils/event_updater jobname:csi-volume-resize $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

if [ "$?" != "0" ]; then
python3 Openshift-EE/utils/result/result_update.py $job_id JCSI12 4-jiva-csi-functional "Liveness on application and verify the status" Fail $pipeline_id "$current_time" $commit_id $gittoken
exit 1;
fi

################
# LitmusBook 3 #
################

run_id="csi";test_name=$(bash Openshift-EE/utils/generate_test_name testcase=csi-volume-resize metadata=${run_id})
echo $test_name

cd litmus
cp experiments/functional/csi-volume-resize/run_litmus_test.yml run_jiva_volume_resize_test.yml

sed -i -e '/name: APP_PVC/{n;s/.*/            value: openebs-busybox/g}' \
-e '/name: APP_LABEL/{n;s/.*/            value: app=busybox-sts/g}' \
-e '/name: STORAGE_CLASS/{n;s/.*/            value: jiva-csi-sc/g}' \
-e 's/app: csi-vol-resize/app: csi-vol-resize/g' \
-e '/name: PV_CAPACITY/{n;s/.*/            value: 5Gi/g}' \
-e '/name: NEW_CAPACITY/{n;s/.*/            value: 10Gi/g}' \
-e '/name: APP_NAMESPACE/{n;s/.*/            value: busybox-csi/g}' run_jiva_volume_resize_test.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' run_jiva_volume_resize_test.yml

cat run_jiva_volume_resize_test.yml

bash ../Openshift-EE/utils/litmus_job_runner label='app:csi-vol-resize' job=run_jiva_volume_resize_test.yml
cd ..
bash Openshift-EE/utils/dump_cluster_state;
bash Openshift-EE/utils/event_updater jobname:csi-volume-resize $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

if [ "$?" != "0" ]; then
python3 Openshift-EE/utils/result/result_update.py $job_id JCSI12 4-jiva-csi-functional "Check if the volume size is changed" Fail $pipeline_id "$current_time" $commit_id $gittoken
exit 1;
fi

################
# LitmusBook 4 #
################

echo "****Busybox liveness deprovision****"

run_id="dep-csi";test_name=$(bash Openshift-EE/utils/generate_test_name testcase=busybox-liveness metadata=${run_id})
echo $test_name

cd litmus
echo "Running the litmus test for deprovisioning busybox liveness..."
cp apps/busybox/liveness/run_litmus_test.yml dep_liveness_csi_busybox.yml

sed -i -e 's/liveness: litmus-busybox-liveness/liveness: litmus-busybox-csi-liveness-dep/g' \
-e 's/generateName: litmus-busybox-liveness-/generateName: litmus-busybox-csi-liveness-dep-/g' \
-e 's/value: provision/value: deprovision/g' \
-e 's/value: app-busybox-ns/value: busybox-csi/g' dep_liveness_csi_busybox.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' dep_liveness_csi_busybox.yml

cat dep_liveness_csi_busybox.yml

bash ../Openshift-EE/utils/litmus_job_runner label='liveness:litmus-busybox-csi-liveness-dep' job=dep_liveness_csi_busybox.yml
cd ..
bash Openshift-EE/utils/dump_cluster_state;
bash Openshift-EE/utils/event_updater jobname:csi-volume-resize $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

if [ "$?" != "0" ]; then
python3 Openshift-EE/utils/result/result_update.py $job_id JCSI12 4-jiva-csi-functional "Liveness on application and verify the status" Fail $pipeline_id "$current_time" $commit_id $gittoken
exit 1;
fi

################
# LitmusBook 5 #
################

echo "****Deprovisioning busybox Application****"

run_id="dep-csi";test_name=$(bash Openshift-EE/utils/generate_test_name testcase=busybox-deprovision-busybox-csi metadata=${run_id})
echo $test_name

cd litmus
echo "Running the litmus test for busybox Deployment Deprovision.."
cp apps/busybox/deployers/run_litmus_test.yml dep_csi_busybox.yml

sed -i -e 's/value: app-busybox-ns/value: busybox-csi/g' \
-e 's/app: busybox-litmus/app: busybox-litmus-csi-dep/g' \
-e 's/generateName: litmus-busybox-deploy-/generateName: litmus-busybox-csi-dep-/g' \
-e 's/value: statefulset/value: deployment/g' \
-e 's/value: provision/value: deprovision/g' \
-e 's/value: openebs-cstor-sparse/value: jiva-csi-sc/g' dep_csi_busybox.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' dep_csi_busybox.yml

cat dep_csi_busybox.yml

bash ../Openshift-EE/utils/litmus_job_runner label='app:busybox-litmus-csi-dep' job=dep_csi_busybox.yml
cd ..
bash Openshift-EE/utils/dump_cluster_state;
bash Openshift-EE/utils/event_updater jobname:csi-volume-resize $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

return_count=$?
current_time=$(eval $time)

if [ "$return_count" != "0" ]; then
bash Openshift-EE/utils/e2e-cr jobname:csi-volume-resize jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:Fail
python3 Openshift-EE/utils/result/result_update.py $job_id JCSI12 4-jiva-csi-functional "Deprovision the busybox application and verify the status" Fail $pipeline_id "$current_time" $commit_id $gittoken
exit 1;
fi

bash Openshift-EE/utils/e2e-cr jobname:csi-volume-resize jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:Pass
python3 Openshift-EE/utils/result/result_update.py $job_id JCSI12 4-jiva-csi-functional "Deprovision the busybox application and verify the status" Pass $pipeline_id "$current_time" $commit_id $gittoken

if [ "$return_count" != "0" ]; then
exit 1;
fi

}

if [ "$1" == "node" ];then
  node $2 $3 $4 $5
else
  pod
fi
