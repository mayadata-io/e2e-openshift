#!/bin/bash

pod() {
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port 'cd e2e-openshift && bash Openshift-EE/pipelines/OpenEBS-base/stages/7-csi-infra-setup/2UVA-create-cspc-mirror-pool/create-cspc-mirror-pool node '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"' '"'$RELEASE_TAG'"'
}

node() {

job_id=$(echo $1)
pipeline_id=$(echo $2)
case_id=2UVA
commit_id=$(echo $3)
releaseTag=$(echo $4)
source ~/.profile
gittoken=$(echo "$github_token")

time="date"
current_time=$(eval $time)

#pooling over previous job to complete
echo "*******Creating cstor-pool**************"
bash Openshift-EE/utils/pooling jobname:cstor-cspc-striped-pool
bash Openshift-EE/utils/e2e-cr jobname:cstor-cspc-mirrored-pool jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag"

run_id="mirrored";test_name=$(bash Openshift-EE/utils/generate_test_name testcase=cstor-pool-provision metadata=${run_id})
echo $test_name
cd litmus

# copy the content of deployer run_litmus_test.yml into a different file to update the test specific parameters.
cp providers/cstor/cstor-cspc-pool/run_litmus_test.yml cspc_create_mirrored_pool.yml

#################
## RUNNER MAIN ##
#################

sed -i -e 's/cstor-cspc-pool-provision/cstor-cspc-mirror-pool-provision/g' \
-e 's/cstor-cspc-disk-pool/cstor-cspc-mirror-pool/g' \
-e 's/value: stripe/value: mirror/g' \
-e 's/value: openebs-cstor-cspc-disk/value: openebs-cstor-mirror-cspc-sc/g' cspc_create_mirrored_pool.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' cspc_create_mirrored_pool.yml

cat cspc_create_mirrored_pool.yml

bash ../Openshift-EE/utils/litmus_job_runner label='app:cstor-cspc-mirror-pool-provision' job=cspc_create_mirrored_pool.yml
bash ../Openshift-EE/utils/dump_cluster_state;
cd ..
bash Openshift-EE/utils/event_updater jobname:cstor-cspc-mirrored-pool $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

#################
## GET RESULT  ##
#################
rc_val=$(echo $?)

## Check the test status & result from the litmus result custom resource
source ~/.profile
gittoken=$(echo "$github_token")
testResult=$(kubectl get litmusresult ${test_name} --no-headers -o custom-columns=:spec.testStatus.result)

current_time=$(eval $time)
bash Openshift-EE/utils/e2e-cr jobname:cstor-cspc-mirrored-pool jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:$testResult

if [ "$rc_val" != "0" ]; then
exit 1;
fi
}

if [ "$1" == "node" ];then
  node $2 $3 $4 $5
else
  pod
fi
