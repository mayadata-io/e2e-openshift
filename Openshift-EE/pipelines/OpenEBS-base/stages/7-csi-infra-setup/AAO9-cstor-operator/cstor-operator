#!/bin/bash

pod() {
node_name=$(sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port kubectl get nodes --no-headers | grep -v master | awk 'FNR==1 {print $1}')
echo $node_name
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port "kubectl taint nodes $node_name infra-aid-"

sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port 'cd e2e-openshift && bash Openshift-EE/pipelines/OpenEBS-base/stages/7-csi-infra-setup/AAO9-cstor-operator/cstor-operator node '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"' '"'$RELEASE_TAG'"' '"'$CSPC_RELEASE_VERSION'"' '"'$CSPC_RELEASE_BRANCH'"'
}

node() {

job_id=$(echo $1)
pipeline_id=$(echo $2)
case_id=AAO9
commit_id=$(echo $3)
releaseTag=$(echo $4)
cspc_operator_image=$(echo $5)
release_branch=$(echo $6)
source ~/.profile
gittoken=$(echo "$github_token")

time="date"
current_time=$(eval $time)

#pooling over previous job to complete
bash Openshift-EE/utils/e2e-cr jobname:cstor-operator jobphase:Waiting
bash Openshift-EE/utils/e2e-cr jobname:cstor-cspc-striped-pool jobphase:Waiting
bash Openshift-EE/utils/e2e-cr jobname:cstor-cspc-mirrored-pool jobphase:Waiting
bash Openshift-EE/utils/e2e-cr jobname:csi-provisioner jobphase:Waiting
bash Openshift-EE/utils/e2e-cr jobname:cstor-csi-storage-policies jobphase:Waiting
bash Openshift-EE/utils/e2e-cr jobname:cstor-operator jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag"

#################
## RUNNER MAIN ##
#################

test_name=$(bash Openshift-EE/utils/generate_test_name testcase=openebs-cstor-operator-provision metadata="")
echo $test_name
cd litmus

cp providers/cstor-operator/run_litmus_test.yaml cstor_operator.yml

sed -i -e "/name: CSTOR_OPERATOR_IMAGE/{n;s/.*/            value: ${releaseTag}/g}"
-e "/name: RELEASE_BRANCH/{n;s/.*/            value: ${release_branch}/g}" \
-e "/name: RELEASE_VERSION/{n;s/.*/            value: ${cspc_operator_image}/g}" cstor_operator.yml

cat cstor_operator.yml

bash ../Openshift-EE/utils/litmus_job_runner label='provider:cstor-operator' job=cstor_operator.yml
bash ../Openshift-EE/utils/dump_cluster_state;
cd ..
bash Openshift-EE/utils/event_updater jobname:cstor-operator $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

#################
## GET RESULT  ##
#################
rc_val=$(echo $?)

## Check the test status & result from the litmus result custom resource
source ~/.profile
gittoken=$(echo "$github_token")
testResult=$(kubectl get litmusresult ${test_name} --no-headers -o custom-columns=:spec.testStatus.result)

current_time=$(eval $time)
bash Openshift-EE/utils/e2e-cr jobname:cstor-operator jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:$testResult

python3 Openshift-EE/utils/result/result_update.py $job_id AAO9 6-csi-infra-setup "install cstor-operator" $testResult $pipeline_id "$current_time" $commit_id $gittoken
if [ "$rc_val" != "0" ]; then
exit 1;
fi
}

if [ "$1" == "node" ];then
  node $2 $3 $4 $5 $6 $7
else
  pod
fi
