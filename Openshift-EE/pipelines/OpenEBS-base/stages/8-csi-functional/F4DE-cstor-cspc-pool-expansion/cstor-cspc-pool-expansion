#!/bin/bash

pod(){
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port 'cd e2e-openshift && bash Openshift-EE/pipelines/OpenEBS-base/stages/8-csi-functional/F4DE-cstor-cspc-pool-expansion/cstor-cspc-pool-expansion node '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"' '"'$RELEASE_TAG'"'
}

node() {
source ~/.profile
gittoken=$(echo "$github_token")
job_id=$(echo $1)
pipeline_id=$(echo $2)
commit_id=$(echo $3)
releaseTag=$(echo $4)
case_id=F4DE

time="date"
current_time=$(eval $time)

present_dir=$(pwd)
echo $present_dir

bash Openshift-EE/utils/pooling jobname:cstor-cspc-pool-scaleup
bash Openshift-EE/utils/e2e-cr jobname:cstor-cspc-pool-expansion jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag"

################
# LitmusBook 1 #
################

echo "****Deploying busybox Application using CSI****"

test_name=$(bash Openshift-EE/utils/generate_test_name testcase=busybox-provision-busybox-cspc-expand metadata='')
echo $test_name

cd litmus
echo "Running the litmus test for busybox Deployment.."
cp apps/busybox/deployers/run_litmus_test.yml deploy_mirror_csi_expand_busybox.yml

sed -i -e 's/value: app-busybox-ns/value: busybox-cspc-expand/g' \
-e 's/app: busybox-litmus/app: busybox-litmus-csi-mirror-expand/g' \
-e 's/generateName: litmus-busybox-deploy-/generateName: litmus-busybox-csi-mirror-expand-/g' \
-e 's/value: statefulset/value: deployment/g' \
-e 's/value: openebs-cstor-sparse/value: openebs-cstor-mirror-cspc-sc/g' deploy_mirror_csi_expand_busybox.yml

cat deploy_mirror_csi_expand_busybox.yml

bash ../Openshift-EE/utils/litmus_job_runner label='app:busybox-litmus-csi-mirror-expand' job=deploy_mirror_csi_expand_busybox.yml
cd ..
bash Openshift-EE/utils/dump_cluster_state;
bash Openshift-EE/utils/event_updater jobname:cstor-cspc-pool-expansion $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

if [ "$?" != "0" ]; then
exit 1;
fi

################
# LitmusBook 2 #
################

echo "****Busybox liveness****"

run_id="cspc-expansion";test_name=$(bash Openshift-EE/utils/generate_test_name testcase=busybox-liveness metadata=${run_id})
echo $test_name

cd litmus
echo "Running the litmus test for busybox liveness..."
cp apps/busybox/liveness/run_litmus_test.yml liveness_csi_mirror_expand_busybox.yml

sed -i -e 's/liveness: litmus-busybox-liveness/liveness: litmus-busybox-csi-mirror-expand-liveness/g' \
-e 's/generateName: litmus-busybox-liveness-/generateName: litmus-busybox-csi-mirror-expand-liveness-/g' \
-e 's/value: app-busybox-ns/value: busybox-cspc-expand/g' liveness_csi_mirror_expand_busybox.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' liveness_csi_mirror_expand_busybox.yml

cat liveness_csi_mirror_expand_busybox.yml

bash ../Openshift-EE/utils/litmus_job_runner label='liveness:litmus-busybox-csi-mirror-expand-liveness' job=liveness_csi_mirror_expand_busybox.yml
cd ..
bash Openshift-EE/utils/dump_cluster_state;
bash Openshift-EE/utils/event_updater jobname:cstor-cspc-pool-expansion $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"
rc_val=$(echo $?)
current_time=$(eval $time)

if [ "$rc_val" != "0" ]; then
exit 1;
fi

################
# LitmusBook 3 #
################

run_id="cspc-expansion";test_name=$(bash Openshift-EE/utils/generate_test_name testcase=data-persistence-check metadata=${run_id})
echo $test_name

cd litmus
echo "Running the litmus test to check data-persistence for BusyBox Application..."
cp experiments/functional/data-persistence/run_litmus_test.yml cspc_expansion_data_persistence.yml

sed -i -e 's/generateName: data-persistence-litmus-/generateName: data-persistence-cspc-expansion-/g' \
-e 's/name: data-persistence/name: cspc-expansion-configmap/g' \
-e 's/name: litmus-data-persistence/name: data-persistence-cspc-expansion-cstor/g' \
-e '/name: APP_NAMESPACE/{n;s/.*/            value: busybox-cspc-expand/}' \
-e '/name: APP_LABEL/{n;s/.*/            value: '\''app=busybox-sts'\''/}' \
-e '/name: STATUS/{n;s/.*/            value: LOAD/}' \
-e '/name: DATA_PERSISTENCE/{n;s/.*/            value: busybox/}' cspc_expansion_data_persistence.yml

## Insert the set of variables for busybox data consistency util into configmap spec.
sed -i '/parameters.yml: |/a \
    blocksize: 4k \
    blockcount: 1024 \
    testfile: cspc_expansion_cstor
' cspc_expansion_data_persistence.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' cspc_expansion_data_persistence.yml

cat cspc_expansion_data_persistence.yml

bash ../Openshift-EE/utils/litmus_job_runner label='name:data-persistence-cspc-expansion-cstor' job=cspc_expansion_data_persistence.yml
cd ..

bash Openshift-EE/utils/dump_cluster_state;
bash Openshift-EE/utils/event_updater jobname:cstor-cspc-pool-expansion $test_name jobid:"$job_id" pipeline_id:"$pipeline_id"

rc_val=$(echo $?)
current_time=$(eval $time)

if [ "$rc_val" != "0" ]; then
exit 1;
fi

#####################
#  LitmusBook 4    ##
#####################

test_name=$(bash Openshift-EE/utils/generate_test_name testcase=cstor-cspc-pool-expansion metadata='')
echo $test_name

cd litmus
cp experiments/functional/day2_ops/cspc_pool/pool_expansion/run_litmus_test.yml pool_expansion.yml

sed -i -e '/name: POOL_NAME/{n;s/.*/            value: cstor-cspc-mirror-pool/}' \
-e '/name: POOL_TYPE/{n;s/.*/            value: mirror/}' \
-e '/name: OPERATOR_NS/{n;s/.*/            value: openebs/}' pool_expansion.yml

cat pool_expansion.yml

bash ../Openshift-EE/utils/litmus_job_runner label='app:cstor-cspc-pool-expansion' job=pool_expansion.yml
cd ..
bash Openshift-EE/utils/dump_cluster_state;
bash Openshift-EE/utils/event_updater jobname:cstor-cspc-pool-expansion $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

rc_val=$(echo $?)
current_time=$(eval $time)

if [ "$rc_val" != "0" ]; then
exit 1;
fi

##############################
# Verifying Data-persistence #
##############################

run_id="cspc-expansion-verify";test_name=$(bash Openshift-EE/utils/generate_test_name testcase=data-persistence-check metadata=${run_id})
echo $test_name

cd litmus
echo "Running Litmus Book for verifying data-persistence against busybox application."
cp experiments/functional/data-persistence/run_litmus_test.yml cspc_expansion_verify_data_persistence.yml

sed -i -e 's/generateName: data-persistence-litmus-/generateName: data-persistence-cspc-expansion-verify-/g' \
-e 's/name: data-persistence/name: cspc-expansion-configmap/g' \
-e 's/name: litmus-data-persistence/name: data-persistence-cspc-expansion-verify/g' \
-e '/name: APP_NAMESPACE/{n;s/.*/            value: busybox-cspc-expand/}' \
-e '/name: APP_LABEL/{n;s/.*/            value: '\''app=busybox-sts'\''/}' \
-e '/name: STATUS/{n;s/.*/            value: VERIFY/}' \
-e '/name: DATA_PERSISTENCE/{n;s/.*/            value: busybox/}' cspc_expansion_verify_data_persistence.yml

## Insert the set of variables for busybox data consistency util into configmap spec.
sed -i '/parameters.yml: |/a \
    blocksize: 4k \
    blockcount: 1024 \
    testfile: cspc_expansion_cstor
' cspc_expansion_verify_data_persistence.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' cspc_expansion_verify_data_persistence.yml

cat cspc_expansion_verify_data_persistence.yml

bash ../Openshift-EE/utils/litmus_job_runner label='name:data-persistence-cspc-expansion-verify' job=cspc_expansion_verify_data_persistence.yml
cd ..

bash Openshift-EE/utils/dump_cluster_state;
bash Openshift-EE/utils/event_updater jobname:cstor-cspc-pool-expansion $test_name jobid:"$job_id" pipeline_id:"$pipeline_id"

rc_val=$(echo $?)
current_time=$(eval $time)

if [ "$rc_val" != "0" ]; then
bash Openshift-EE/utils/e2e-cr jobname:cstor-cspc-pool-expansion jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" openebs_version:"$releaseTag" test_result:Fail
exit 1;
fi

bash Openshift-EE/utils/e2e-cr jobname:cstor-cspc-pool-expansion jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:Pass

}

if [ "$1" == "node" ];then
  node $2 $3 $4 $5
else
  pod
fi
