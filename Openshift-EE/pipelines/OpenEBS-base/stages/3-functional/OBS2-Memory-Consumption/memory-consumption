#!/bin/bash
set -x

pod() {
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port 'cd e2e-openshift && bash Openshift-EE/pipelines/OpenEBS-base/stages/3-functional/OBS2-Memory-Consumption/memory-consumption node '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"'
}

node() {
job_id=$(echo $1)
pipeline_id=$(echo $2)
commit_id=$(echo $3)
case_id=OBS2

source ~/.profile
gittoken=$(echo "$github_token")

time="date"
current_time=$(eval $time)

present_dir=$(pwd)
echo $present_dir

bash Openshift-EE/utils/e2e-cr jobname:memory-consumption jobphase:Waiting init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"
bash Openshift-EE/utils/e2e-cr jobname:memory-consumption jobphase:Running init_time:"$current_time"

echo "*******Deploying Busybox-sts Application****"

test_name=$(bash Openshift-EE/utils/generate_test_name testcase=busybox-provision-mem-check metadata="")
echo $test_name
cd litmus
echo "Running the litmus test for Busybox Deployment.."

cp apps/busybox/deployers/run_litmus_test.yml busybox_memcheck.yml

sed -i -e 's/app: busybox-litmus/app: deploy-busybox-litmus/g' \
-e 's/app=busybox-sts/app=busybox-mem/g' \
-e 's/value: statefulset/value: deployment/g' \
-e 's/value: openebs-cstor-sparse/value: openebs-cstor-disk/g' \
-e 's/value: app-busybox-ns/value: mem-check/g' busybox_memcheck.yml

cat busybox_memcheck.yml

bash ../Openshift-EE/utils/litmus_job_runner label='app:deploy-busybox-litmus' job=busybox_memcheck.yml
cd ..
bash Openshift-EE/utils/dump_cluster_state;
bash Openshift-EE/utils/event_updater jobname:memory-consumption $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

if [ "$?" != "0" ]; then
python3 Openshift-EE/utils/result/result_update.py $job_id OBS2 3-functional "Check if the memory consumption doesn't cross the desired threshold for known workload" Fail $pipeline_id "$current_time" $commit_id $gittoken
exit 1;
fi

echo "*******Checking Memory Consumption**********"

test_name=$(bash Openshift-EE/utils/generate_test_name testcase=memcheck-test metadata="")
echo $test_name
cd litmus

cp apps/prometheus/functional/memcheck/run_litmus_test.yml memcheck_test.yml

sed -i -e 's/name=prometheus/app=busybox-mem/g' \
-e 's/prometheus-claim/openebs-busybox/g' \
-e 's/value: app-prometheus/value: mem-check/g' memcheck_test.yml

echo "Running the litmus test for Busybox Deployment Scaleup.."
cat memcheck_test.yml

bash ../Openshift-EE/utils/litmus_job_runner label='app:memcheck-cstor-test' job=memcheck_test.yml
cd ..
bash Openshift-EE/utils/dump_cluster_state;
bash Openshift-EE/utils/event_updater jobname:memory-consumption $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

if [ "$?" != "0" ]; then
python3 Openshift-EE/utils/result/result_update.py $job_id OBS2 3-functional "Check if the memory consumption doesn't cross the desired threshold for known workload" Fail $pipeline_id "$current_time" $commit_id $gittoken
exit 1;
fi

echo "********Deprovisioning Busybox Application*******"

test_name=$(bash Openshift-EE/utils/generate_test_name testcase=busybox-deprovision-mem-check metadata="")
echo $test_name
cd litmus

cp apps/busybox/deployers/run_litmus_test.yml deprovision_mem_check.yml
sed -i -e 's/generateName: litmus-busybox-deploy/generateName: busybox-mem-check-deprovision/g' \
-e 's/app: busybox-litmus/app: busybox-deprovision-mem-check/g' \
-e 's/app=busybox-sts/app=busybox-mem/g' \
-e 's/value: statefulset/value: deployment/g' \
-e 's/value: openebs-cstor-sparse/value: openebs-cstor-disk/g' \
-e 's/value: app-busybox-ns/value: mem-check/g' \
-e 's/value: provision/value: deprovision/g' deprovision_mem_check.yml

echo "Running the litmus test for Busybox Deployment Scaleup.."
cat deprovision_mem_check.yml

bash ../Openshift-EE/utils/litmus_job_runner label='app:busybox-deprovision-mem-check' job=deprovision_mem_check.yml
cd ..
bash Openshift-EE/utils/dump_cluster_state;
bash Openshift-EE/utils/event_updater jobname:memory-consumption $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

rc_val=$(echo $?)

# testResult=$(kubectl get litmusresult ${test_name} --no-headers -o custom-columns=:spec.testStatus.result)


# if [ "$rc_val" != "0" ]; then
# exit 1;
# fi

current_time=$(eval $time)
bash Openshift-EE/utils/e2e-cr jobname:memory-consumption jobphase:Completed end_time:"$current_time" test_result:Pass jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"
python3 Openshift-EE/utils/result/result_update.py $job_id OBS2 3-functional "Check if the memory consumption doesn't cross the desired threshold for known workload" Pass $pipeline_id "$current_time" $commit_id $gittoken
}

if [ "$1" == "node" ];then
  node $2 $3 $4
else
  pod
fi
