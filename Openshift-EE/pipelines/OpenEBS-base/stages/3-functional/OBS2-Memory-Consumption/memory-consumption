#!/bin/bash


pod() {
mkdir -p /root/.ssh
touch /root/.ssh/id_rsa
echo "$SSH_KEYS" > /root/.ssh/id_rsa
chmod 600 /root/.ssh/id_rsa
ssh -o StrictHostKeyChecking=no $user@$ip -p $port -i /root/.ssh/id_rsa 'cd e2e-openshift && bash Openshift-EE/pipelines/OpenEBS-base/stages/3-functional/OBS2-Memory-Consumption/memory-consumption node '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"' '"'$RELEASE_TAG'"'
}

node() {
job_id=$(echo $1)
pipeline_id=$(echo $2)
commit_id=$(echo $3)
releaseTag=$(echo $4)
case_id=OBS2

source ~/.profile
gittoken=$(echo "$github_token")

time="date"
current_time=$(eval $time)

present_dir=$(pwd)
echo $present_dir

bash Openshift-EE/utils/e2e-cr jobname:memory-consumption jobphase:Waiting init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag"
bash Openshift-EE/utils/e2e-cr jobname:memory-consumption jobphase:Running init_time:"$current_time"

###Deploying Busybox Application

################
# e2eBook 1 #
################

test_name=$(bash Openshift-EE/utils/generate_test_name testcase=busybox-provision-mem-check metadata="")
echo $test_name
cd e2e-tests
echo "Running the e2e test for Busybox Deployment.."

cp apps/busybox/deployers/run_e2e_test.yml busybox_memcheck.yml

: << EOF
  ---------------------------------------------------------------------------------------------------------------------
 | specAttribute     | kind   |         default value               | test specifc value                               |
  ---------------------------------------------------------------------------------------------------------------------|
 | e2e job label  | label  | app: busybox-e2e                 | app: deploy-busybox-e2e                       |
 | appLabel          | env    | app=busybox-sts                     | app=busybox-mem                                  |
 | deploy type       | env    | statefulset                         | deployment                                       |
 | storage class     | env    | openebs-cstor-sparse                | openebs-cstor-disk                               |
 | appNamespace      | env    | app-busybox-ns                      | mem-check                                        | 
  ----------------------------------------------------------------------------------------------------------------------
EOF

sed -i -e 's/app: busybox-e2e/app: deploy-busybox-e2e/g' \
-e 's/app=busybox-sts/app=busybox-mem/g' \
-e 's/value: statefulset/value: deployment/g' \
-e 's/value: openebs-cstor-sparse/value: openebs-cstor-disk/g' \
-e 's/value: app-busybox-ns/value: mem-check/g' busybox_memcheck.yml

cat busybox_memcheck.yml

bash ../Openshift-EE/utils/e2e_job_runner label='app:deploy-busybox-e2e' job=busybox_memcheck.yml
cd ..
bash Openshift-EE/utils/dump_cluster_state;
bash Openshift-EE/utils/event_updater jobname:memory-consumption $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

if [ "$?" != "0" ]; then
python3 Openshift-EE/utils/result/result_update.py $job_id OBS2 3-functional "Check if the memory consumption doesn't cross the desired threshold for known workload" Fail $pipeline_id "$current_time" $commit_id $gittoken
exit 1;
fi

##Deploying loadgen and liveness

#################
# e2eBook 2 #
################

run_id="mem";test_name=$(bash Openshift-EE/utils/generate_test_name testcase=busybox-liveness metadata=${run_id})
echo $test_name

cd e2e-tests
# copy the content of deployer run_e2e_test.yml into a different file to update the test specific parameters.
cp apps/busybox/liveness/run_e2e_test.yml busybox_loadgen_mem_consumption.yml

 # Update the environmental variables in e2e job spec.

 : << EOF
  ---------------------------------------------------------------------------------------------------------------------
 | specAttribute     | kind   |         default value               | test specifc value                               |
  ---------------------------------------------------------------------------------------------------------------------|
 | appNamespace      | env    | app-busybox-ns                      | mem-check                                        | 
 | appLabel          | env    | app=busybox-sts                     | app=busybox-mem                                  | 
 | e2e job label  | label  | liveness: e2e-busybox-liveness   | liveness: bb-liveness-mem-consumption            | 
  ----------------------------------------------------------------------------------------------------------------------
EOF

sed -i -e 's/value: app-busybox-ns/value: mem-check/g' \
-e 's/app=busybox-sts/app=busybox-mem/g' \
-e 's/liveness: e2e-busybox-liveness/liveness: bb-liveness-mem-consumption/g' busybox_loadgen_mem_consumption.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' busybox_loadgen_mem_consumption.yml

cat busybox_loadgen_mem_consumption.yml
 # Run the e2e job and get the details of the e2e job from e2e_job_runner utils.
bash ../Openshift-EE/utils/e2e_job_runner label='liveness:bb-liveness-mem-consumption' job=busybox_loadgen_mem_consumption.yml
cd ..
# Get the cluster state Once the e2e jobs completed.
bash Openshift-EE/utils/dump_cluster_state;
bash Openshift-EE/utils/event_updater jobname:memory-consumption $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

if [ "$?" != "0" ]; then
python3 Openshift-EE/utils/result/result_update.py $job_id OBS2 3-functional "Check if the memory consumption doesn't cross the desired threshold for known workload" Fail $pipeline_id "$current_time" $commit_id $gittoken
exit 1;
fi

###Checking Memory Consumption

#################
# e2eBook 3 #
################

test_name=$(bash Openshift-EE/utils/generate_test_name testcase=memcheck-test metadata="")
echo $test_name
cd e2e-tests

cp experiments/functional/memcheck/run_e2e_test.yml memcheck_test.yml

: << EOF
  ---------------------------------------------------------------------------------------------------------------------
 | specAttribute     | kind   |         default value               | test specifc value                               |
  ---------------------------------------------------------------------------------------------------------------------|
 | appLabel          | label  | name=prometheus                     | busybox-mem                                      | 
 | appPVC            | env    | prometheus-claim                    | openebs-busybox                                  | 
 | Namespace         | env    | app-prometheus                      | mem-check                                        |
 ----------------------------------------------------------------------------------------------------------------------
EOF

sed -i -e 's/name=prometheus/app=busybox-mem/g' \
-e 's/prometheus-claim/openebs-busybox/g' \
-e 's/value: app-prometheus/value: mem-check/g' memcheck_test.yml

echo "Running the e2e test for Busybox Deployment Scaleup.."
cat memcheck_test.yml

bash ../Openshift-EE/utils/e2e_job_runner label='app:memcheck-cstor-test' job=memcheck_test.yml
cd ..
bash Openshift-EE/utils/dump_cluster_state;
bash Openshift-EE/utils/event_updater jobname:memory-consumption $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

if [ "$?" != "0" ]; then
python3 Openshift-EE/utils/result/result_update.py $job_id OBS2 3-functional "Check if the memory consumption doesn't cross the desired threshold for known workload" Fail $pipeline_id "$current_time" $commit_id $gittoken
exit 1;
fi

##Deprovisioning loadgen and liveness 

################
# e2eBook 4 #
################

run_id="dep-mem";test_name=$(bash Openshift-EE/utils/generate_test_name testcase=busybox-liveness metadata=${run_id})
echo $test_name

cd e2e-tests
# copy the content of deployer run_e2e_test.yml into a different file to update the test specific parameters.
cp apps/busybox/liveness/run_e2e_test.yml deprovision_loadgen_mem_consumption.yml

 # Update the environmental variables in e2e job spec.

 : << EOF
  ---------------------------------------------------------------------------------------------------------------------
 | specAttribute     | kind   |         default value               | test specifc value                               |
  ---------------------------------------------------------------------------------------------------------------------|
 | appNamespace      | env    | app-busybox-ns                      | mem-check                                        | 
 | action            | env    | provision                           | deprovision                                      | 
 | appLabel          | env    | app=busybox-sts                     | app=busybox-mem                                  | 
 | e2e job label  | label  | liveness: e2e-busybox-liveness   | liveness: liveness-deprovision-mem-consumption   |
 ----------------------------------------------------------------------------------------------------------------------
EOF

sed -i -e 's/value: app-busybox-ns/value: mem-check/g' \
-e 's/value: provision/value: deprovision/g' \
-e 's/app=busybox-sts/app=busybox-mem/g' \
-e 's/generateName: e2e-busybox-liveness/generateName: busybox-liveness-dep-mem-consumption/g' \
-e 's/liveness: e2e-busybox-liveness/liveness: liveness-deprovision-mem-consumption/g'  deprovision_loadgen_mem_consumption.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' deprovision_loadgen_mem_consumption.yml

cat deprovision_loadgen_mem_consumption.yml
# Run the e2e job and get the details of the e2e job from e2e_job_runner utils.
bash ../Openshift-EE/utils/e2e_job_runner label='liveness:liveness-deprovision-mem-consumption' job=deprovision_loadgen_mem_consumption.yml
cd ..
# Get the cluster state Once the e2e jobs completed.
bash Openshift-EE/utils/dump_cluster_state;
bash Openshift-EE/utils/event_updater jobname:memory-consumption $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

rc_val=$(echo $?)

 # Update result of the test case in github mayadata-io/e2e-openshift repository.
if [ "$rc_val" != "0" ]; then
python3 Openshift-EE/utils/result/result_update.py $job_id OBS2 3-functional "Check if the memory consumption doesn't cross the desired threshold for known workload" Fail $pipeline_id "$current_time" $commit_id $gittoken
exit 1;
fi


###Deprovisioning Busybox Application

################
# e2eBook 5 #
################

test_name=$(bash Openshift-EE/utils/generate_test_name testcase=busybox-deprovision-mem-check metadata="")
echo $test_name
cd e2e-tests

: << EOF
  ---------------------------------------------------------------------------------------------------------------------
 | specAttribute     | kind   |         default value               | test specifc value                               |
  ---------------------------------------------------------------------------------------------------------------------|
 | e2e Job name   | name   | generateName: e2e-busybox-deploy | generateName:busybox-mem-check-deprovision       |
 | e2e job label  | label  | app: busybox-e2e                 | app: busybox-deprovision-mem-check               |
 | appLabel          | env    | app=busybox-sts                     | app=busybox-mem                                  | 
 | deploy type       | env    | statefulset                         | deployment                                       |
 | storage clas      | env    | openebs-cstor-sparse                | openebs-cstor-disk                               |
 | appNamespace      | env    | app-busybox-ns                      | mem-check                                        | 
 | Action            | env    | value: provision                    | value: deprovision                               |
  ----------------------------------------------------------------------------------------------------------------------
EOF

cp apps/busybox/deployers/run_e2e_test.yml deprovision_mem_check.yml
sed -i -e 's/generateName: e2e-busybox-deploy/generateName: busybox-mem-check-deprovision/g' \
-e 's/app: busybox-e2e/app: busybox-deprovision-mem-check/g' \
-e 's/app=busybox-sts/app=busybox-mem/g' \
-e 's/value: statefulset/value: deployment/g' \
-e 's/value: openebs-cstor-sparse/value: openebs-cstor-disk/g' \
-e 's/value: app-busybox-ns/value: mem-check/g' \
-e 's/value: provision/value: deprovision/g' deprovision_mem_check.yml

echo "Running the e2e test for Busybox Deployment Scaleup.."
cat deprovision_mem_check.yml

bash ../Openshift-EE/utils/e2e_job_runner label='app:busybox-deprovision-mem-check' job=deprovision_mem_check.yml
cd ..
bash Openshift-EE/utils/dump_cluster_state;
bash Openshift-EE/utils/event_updater jobname:memory-consumption $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

rc_val=$(echo $?)
current_time=$(eval $time)

# testResult=$(kubectl get e2eresult ${test_name} --no-headers -o custom-columns=:spec.testStatus.result)

if [ "$rc_val" != "0" ]; then
bash Openshift-EE/utils/e2e-cr jobname:memory-consumption jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:Fail
python3 Openshift-EE/utils/result/result_update.py $job_id OBS2 3-functional "Check if the memory consumption doesn't cross the desired threshold for known workload" Fail $pipeline_id "$current_time" $commit_id $gittoken
exit 1;
fi

bash Openshift-EE/utils/e2e-cr jobname:memory-consumption jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:Pass
python3 Openshift-EE/utils/result/result_update.py $job_id OBS2 3-functional "Check if the memory consumption doesn't cross the desired threshold for known workload" Pass $pipeline_id "$current_time" $commit_id $gittoken

if [ "$rc_val" != "0" ]; then
exit 1;
fi
}

if [ "$1" == "node" ];then
  node $2 $3 $4 $5
else
  pod
fi
