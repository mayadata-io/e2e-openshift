#!/bin/bash
set -x

pod() {
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port 'cd e2e-openshift && bash Openshift-EE/pipelines/OpenEBS-base/stages/3-functional/4ZWU-STS-Volume-Distribution/volume-distribution node '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"'
}

node() {
job_id=$(echo $1)
pipeline_id=$(echo $2)
case_id=4ZWU
time="date"
source ~/.profile
gittoken=$(echo "$github_token")
commit_id=$(echo $3)
current_time=$(eval $time)

bash Openshift-EE/utils/e2e-cr jobname:volume-replica-distribution jobphase:Waiting
bash Openshift-EE/utils/e2e-cr jobname:volume-replica-distribution jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

test_name=$(bash Openshift-EE/utils/generate_test_name testcase=replica-distribution metadata="")
echo $test_name

echo "*******Deploying Application and Check the statefulset storage volume distributed************"
cd litmus
echo "Running the litmus test.."
sed -i -e 's/imagePullPolicy: Always/imagePullPolicy: IfNotPresent/g' experiments/functional/sts-volume-distribution/run_litmus_test.yml
run_test=experiments/functional/sts-volume-distribution/run_litmus_test.yml
sed -i -e 's/app: busybox-statefulset-litmus/app: busybox-vol-distribute/g' \
-e 's/value: openebs-cstor-sparse/value: openebs-cstor-disk/g' \
-e 's/value: 'app=busybox-sts'/value: 'app=busybox'/g' \
-e 's/value: app-busybox-ns/value: busybox/g' $run_test
cat $run_test

bash ../Openshift-EE/utils/litmus_job_runner label='app:busybox-vol-distribute' job=$run_test

echo "Dumping state of cluster post job run"; echo ""
cd ..
bash Openshift-EE/utils/dump_cluster_state;

bash Openshift-EE/utils/event_updater jobname:volume-replica-distribution $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

if [ "$?" != "0" ]; then
exit 1;
fi

#################
## GET RESULT  ##
#################
rc_val=$(echo $?)
test_case_id="4ZWU-$pipeline_id"
source ~/.profile
gittoken=$(echo "$github_token")
testResult=$(kubectl get litmusresult ${test_name} --no-headers -o custom-columns=:spec.testStatus.result)
#python3 Openshift-EE/utils/result/result_update.py $test_case_id 4ZWU 3-functional "Check if the storage volume replicas are distributed across the storage pools in case of statefulset deployment" $testResult $pipeline_id "$current_time" $commit_id $gittoken

## Check the test status & result from the litmus result custom resource
current_time=$(eval $time)
bash Openshift-EE/utils/e2e-cr jobname:volume-replica-distribution jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" test_result:Pass

python3 Openshift-EE/utils/result/result_update.py $job_id 4ZWU 3-functional "Check if the storage volume replicas are distributed across the storage pools in case of statefulset deployment" $testResult $pipeline_id "$current_time" $commit_id $gittoken

if [ "$rc_val" != "0" ]; then
exit 1;
fi

}

if [ "$1" == "node" ];then
  node $2 $3 $4
else
  pod
fi
