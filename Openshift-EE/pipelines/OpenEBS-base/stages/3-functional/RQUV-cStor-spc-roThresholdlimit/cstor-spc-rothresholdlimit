#!/bin/bash


pod() {
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port 'cd e2e-openshift && bash Openshift-EE/pipelines/OpenEBS-base/stages/3-functional/RQUV-cStor-spc-roThresholdlimit/cstor-spc-rothresholdlimit node '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"' '"'$RELEASE_TAG'"'
}

node() {
source ~/.profile
gittoken=$(echo "$github_token")

job_id=$(echo $1)
pipeline_id=$(echo $2)
commit_id=$(echo $3)
releaseTag=$(echo $4)
case_id=RQUV

time="date"
current_time=$(eval $time)

present_dir=$(pwd)
echo $present_dir

bash Openshift-EE/utils/e2e-cr jobname:cstor-spc-rothresholdlimit jobphase:Waiting
bash Openshift-EE/utils/e2e-cr jobname:cstor-spc-rothresholdlimit jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag"

################
# LitmusBook 1 #
################

test_name=$(bash Openshift-EE/utils/generate_test_name testcase=cstor-rothreshold-limit metadata="")
echo $test_name
cd litmus

cp experiments/functional/rothreshold-limit/run_litmus_test.yml cstor_rothreshold_limit.yml

cat cstor_rothreshold_limit.yml 

bash ../Openshift-EE/utils/litmus_job_runner label='app:cstor-rothreshold-limit' job=cstor_rothreshold_limit.yml
bash ../Openshift-EE/utils/dump_cluster_state;
cd ..
bash Openshift-EE/utils/event_updater jobname:cstor-spc-rothresholdlimit $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

rc_val=$(echo $?)
current_time=$(eval $time)

if [ "$rc_val" != "0" ]; then
bash Openshift-EE/utils/e2e-cr jobname:cstor-spc-rothresholdlimit jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:Fail
python3 Openshift-EE/utils/result/result_update.py $job_id RQUV 3-functional "Create cStor based Striped storage pool on disks to verify the threshold limit" Fail $pipeline_id "$current_time" $commit_id $gittoken
exit 1;
fi

bash Openshift-EE/utils/e2e-cr jobname:cstor-spc-rothresholdlimit jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:Pass
python3 Openshift-EE/utils/result/result_update.py $job_id RQUV 3-functional "Create cStor based Striped storage pool on disks to verify the threshold limit" Pass $pipeline_id "$current_time" $commit_id $gittoken

if [ "$rc_val" != "0" ]; then
exit 1;
fi

}

if [ "$1" == "node" ];then
  node $2 $3 $4 $5
else
  pod
fi
