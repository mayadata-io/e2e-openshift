#!/bin/bash
set -x

pod() {
echo $CI_JOB_ID
###clone e2e-openshift-repo
echo "cloning e2e-openshift repo*************"
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port 'git clone -b OpenEBS-base https://github.com/openebs/e2e-openshift.git'
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port 'cd e2e-openshift && bash Openshift-EE/pipelines/OpenEBS-base/stages/3-functional/SN3A-Jiva-Memory-Consumptions/memory-consumption node '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"'
}

node() {
job_id=$(echo $1)
pipeline_id=$(echo $2)
commit_id=$(echo $3)
case_id=SN3A

source ~/.profile
gittoken=$(echo "$github_token")

time="date"
current_time=$(eval $time)

present_dir=$(pwd)
echo $present_dir

bash Openshift-EE/utils/e2e-cr jobname:memory-consumption-jiva jobphase:Waiting init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"
bash Openshift-EE/utils/e2e-cr jobname:memory-consumption-jiva jobphase:Running init_time:"$current_time"

################
# LitmusBook 1 #
################

: << EOF
  --------------------------------------------------------------------------------------------------------------------     
 | specAttribute     | kind   |         default value               | test specifc value                              |
  ------------------------------------------------------------------------------------------------------------------- |
 | appLabel          | env    | app=busybox-sts                     | app=busybox-mem-jiva                            |
 | deploy type       | env    | statefulset                         | deployment                                      |
 | appNamespace      | env    | app-busybox-ns                      | mem-check-jiva                                  |
 | pvcName           | env    | prometheus-claim                    | openebs-busybox                                 | 
 | storage clas      | env    | openebs-cstor-sparse                | openebs-jiva-default                            |
 | Litmus Job name   | name   | generateName: litmus-busybox-deploy | generateName: busybox-mem-check-deprovision-jiva|
 | Litmus job label  | label  | app: busybox-litmus                 | mem-busybox-jiva                                |
  ---------------------------------------------------------------------------------------------------------------------
EOF

test_name=$(bash Openshift-EE/utils/generate_test_name testcase=busybox-provision-mem-check-jiva metadata="")
echo $test_name
cd litmus

cp apps/busybox/deployers/run_litmus_test.yml busybox_memcheck_jiva.yml

sed -i -e 's/app: busybox-litmus/app: mem-busybox-jiva/g' \
-e 's/app=busybox-sts/app=busybox-mem-jiva/g' \
-e 's/value: statefulset/value: deployment/g' \
-e 's/value: openebs-cstor-sparse/value: openebs-jiva-default/g' \
-e 's/value: app-busybox-ns/value: mem-check-jiva/g' busybox_memcheck_jiva.yml

cat busybox_memcheck_jiva.yml

bash ../Openshift-EE/utils/litmus_job_runner label='app:mem-busybox-jiva' job=busybox_memcheck.yml
cd ..
bash Openshift-EE/utils/dump_cluster_state;
bash Openshift-EE/utils/event_updater jobname:memory-consumption-jiva $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

if [ "$?" != "0" ]; then
python3 Openshift-EE/utils/result/result_update.py $job_id SN3A 3-functional "Check if the memory consumption doesn't cross the desired threshold for known workload" Fail $pipeline_id "$current_time" $commit_id $gittoken
exit 1;
fi

echo "*******Checking Memory Consumption**********"

run_id="jiva";test_name=$(bash Openshift-EE/utils/generate_test_name testcase=memcheck-test metadata=${run_id})
echo $test_name
cd litmus

################
# LitmusBook 2 #
################

cp apps/prometheus/functional/memcheck/run_litmus_test.yml memcheck_test_jiva.yml


: << EOF
  --------------------------------------------------------------------------------------------------------------------     
 | specAttribute     | kind   |         default value               | test specifc value                              |
  ------------------------------------------------------------------------------------------------------------------- |
 | appLabel          | env    | name=prometheus                     | app=busybox-mem-jiva                            |
 | pvcName           | env    | prometheus-claim                    | openebs-busybox                                 | 
 | storage clas      | env    | openebs-cstor-sparse                | openebs-jiva-default                            |
 | Litmus Job name   | name   | generateName: litmus-busybox-deploy | generateName: busybox-mem-check-deprovision-jiva|
 | Litmus job label  | label  | app: memcheck-cstor-test            | memcheck-test-jiva                              |
  ---------------------------------------------------------------------------------------------------------------------
EOF

sed -i -e 's/name=prometheus/app=busybox-mem-jiva/g' \
-e 's/prometheus-claim/openebs-busybox/g' \
-e 's/app: memcheck-cstor-test/app: memcheck-test-jiva/g' \
-e 's/value: app-prometheus/value: mem-check-jiva/g' memcheck_test_jiva.yml

cat memcheck_test_jiva.yml

bash ../Openshift-EE/utils/litmus_job_runner label='app:memcheck-test-jiva' job=memcheck_test.yml
cd ..
bash Openshift-EE/utils/dump_cluster_state;
bash Openshift-EE/utils/event_updater jobname:memory-consumption-jiva $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

if [ "$?" != "0" ]; then
python3 Openshift-EE/utils/result/result_update.py $job_id SN3A 3-functional "Check if the memory consumption doesn't cross the desired threshold for known workload" Fail $pipeline_id "$current_time" $commit_id $gittoken
exit 1;
fi

echo "********Deprovisioning Busybox Application*******"

test_name=$(bash Openshift-EE/utils/generate_test_name testcase=busybox-deprovision-mem-check-jiva metadata="")
echo $test_name
cd litmus

################
# LitmusBook 3 #
################

: << EOF
  --------------------------------------------------------------------------------------------------------------------     
 | specAttribute     | kind   |         default value               | test specifc value                              |
  ------------------------------------------------------------------------------------------------------------------- |
 | appLabel          | env    | app=busybox-sts                     | app=busybox-mem-jiva                            |
 | pvcName           | env    | openebs-busybox                     | busybox-ctrl-kill                               | 
 | appNamespace      | env    | app-busybox-ns                      | mem-check-jiva                                  | 
 | storage clas      | env    | openebs-cstor-sparse                | openebs-jiva-default                            |
 | deploy type       | env    | statefulset                         | deployment                                      |
 | Action            | env    | value: provision                    | value: deprovision                              |
 | Litmus Job name   | name   | generateName: litmus-busybox-deploy | generateName: busybox-mem-check-deprovision-jiva|
 | Litmus job label  | label  | app: busybox-litmus                 | busybox-deprovision-mem-check-jiva              |
  ---------------------------------------------------------------------------------------------------------------------
EOF

cp apps/busybox/deployers/run_litmus_test.yml deprovision_mem_check_jiva.yml
sed -i -e 's/generateName: litmus-busybox-deploy/generateName: busybox-mem-check-deprovision-jiva/g' \ 
-e 's/app: busybox-litmus/app: busybox-deprovision-mem-check-jiva/g' \
-e 's/app=busybox-sts/app=busybox-mem-jiva/g' \
-e 's/value: statefulset/value: deployment/g' \
-e 's/value: openebs-cstor-sparse/value: openebs-jiva-default/g' \
-e 's/value: app-busybox-ns/value: mem-check-jiva/g' \
-e 's/value: provision/value: deprovision/g' deprovision_mem_check_jiva.yml

cat deprovision_mem_check_jiva.yml

bash ../Openshift-EE/utils/litmus_job_runner label='app:busybox-deprovision-mem-check-jiva' job=deprovision_mem_check.yml
cd ..
bash Openshift-EE/utils/dump_cluster_state;
bash Openshift-EE/utils/event_updater jobname:memory-consumption-jiva $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

rc_val=$(echo $?)

# testResult=$(kubectl get litmusresult ${test_name} --no-headers -o custom-columns=:spec.testStatus.result)


# if [ "$rc_val" != "0" ]; then
# exit 1;
# fi

current_time=$(eval $time)
bash Openshift-EE/utils/e2e-cr jobname:memory-consumption-jiva jobphase:Completed end_time:"$current_time" test_result:Pass jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"
python3 Openshift-EE/utils/result/result_update.py $job_id SN3A 3-functional "Check if the memory consumption doesn't cross the desired threshold for known workload" Pass $pipeline_id "$current_time" $commit_id $gittoken
}

if [ "$1" == "node" ];then
  node $2 $3 $4
else
  pod
fi
