#!/bin/bash
set -x

pod() {

sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port 'cd e2e-openshift && bash Openshift-EE/pipelines/ElasticSearch/stages/3-functional/86TL-App-replica-scaleup/app-replica-scaleup node '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"'
}

node() {
source ~/.profile
gittoken=$(echo "$github_token")
job_id=$(echo $1)
pipeline_id=$(echo $2)
commit_id=$(echo $3)
case_id=86TL

time="date"
current_time=$(eval $time)

present_dir=$(pwd)
echo $present_dir

bash Openshift-EE/utils/e2e-cr jobname:app-replica-scaleup jobphase:Waiting init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"
bash Openshift-EE/utils/e2e-cr jobname:app-replica-scaleup jobphase:Running



echo "*******Scaling Application replicas**********"

test_name=$(bash Openshift-EE/utils/generate_test_name testcase=scale-app-replicas metadata=${run_id})
echo $test_name

################
# LitmusBook 1#
################

cd litmus
cp experiments/functional/scale_app_replica/run_litmus_test.yml run_scaleup_test.yml

: << EOF
  ---------------------------------------------------------------------------------------------------------------------
 | specAttribute     | kind   |         default value               | test specifc value                               |
  ---------------------------------------------------------------------------------------------------------------------|
 | appLabel          | env    | app=cassandra                       | app=elasticsearch                                | 
 | appNamespace      | env    | app-cass-ns                         | app-esearch-ns                                   | 
 | Litmus job label  | label  | app: cassandra-scaleup-litmus       | app:  elasticsearch-scaleup-litmus            |                         |
  ----------------------------------------------------------------------------------------------------------------------
EOF

sed -i -e 's/app: cassandra-scaleup-litmus/app: elasticsearch-scaleup-litmus /g' \
-e 's/value: '\''app=cassandra'\''/value: '\''app=elasticsearch'\''/g' \
-e 's/value: app-cass-ns/value: app-esearch-ns/g' run_scaleup_test.yml


echo "Running the litmus test for Elasticsearch Deployment Scaleup.."
cat run_scaleup_test.yml

bash ../Openshift-EE/utils/litmus_job_runner label='app:elasticsearch-scaleup-litmus' job=run_scaleup_test.yml
cd ..
bash Openshift-EE/utils/dump_cluster_state;
bash Openshift-EE/utils/event_updater jobname:app-replica-scaleup $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

if [ "$?" != "0" ]; then
exit 1;
fi

#################
## GET RESULT  ##
#################
rc_val=$(echo $?)
test_case_id=$case_id
source ~/.profile
gittoken=$(echo "$github_token")
testResult=$(kubectl get litmusresult ${test_name} --no-headers -o custom-columns=:spec.testStatus.result)

current_time=$(eval $time)
bash Openshift-EE/utils/e2e-cr jobname:app-replica-scaleup jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" test_result:Pass

python3 Openshift-EE/utils/result/result_update.py $job_id 86TL 3-functional "Scale the statefulset application replicas and verify the ring configuration" $testResult $pipeline_id "$current_time" $commit_id $gittoken

if [ "$rc_val" != "0" ]; then
exit 1;
fi
}

if [ "$1" == "node" ];then
  node $2 $3 $4
else
  pod
fi
