#!/bin/bash
set -x

pod() {
echo $CI_JOB_ID
###clone e2e-openshift-repo
echo "cloning e2e-openshift repo*************"
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p 1658 'git clone https://github.com/mayadata-io/e2e-openshift.git'
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p 1658 'cd e2e-openshift && git checkout elasticsearch && bash Openshift-EE/pipelines/ElasticSearch/stages/3-functional/5Q19-deploy-elasticsearch/elasticsearch-provision node '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"'
}

node() {
job_id=$(echo $1)
pipeline_id=$(echo $2)
commit_id=$(echo $3)
case_id=5Q19

time="date"
current_time=$(eval $time)

bash Openshift-EE/utils/e2e-cr jobname:elasticsearch-provision jobphase:Waiting
bash Openshift-EE/utils/e2e-cr jobname:elasticsearch-provision jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" 
bash Openshift-EE/utils/e2e-cr jobname:app-replica-scaleup jobphase:Waiting  

# Removing test_id from e2e-result.yml spec for simple mode
#sed -i "s/-<job_id>/ /g" Openshift-EE/utils/result-volume-replica-distribution.yml

echo "*******Deploying Elasticsearch Application****"
#kubectl apply -f Openshift-EE/utils/result-elasticsearch-provision.yml

test_name=$(bash Openshift-EE/utils/generate_test_name testcase=elasticsearch-deployment metadata="")
echo $test_name

cd litmus

echo "Running the litmus test.."
run_test=apps/elasticsearch/deployers/run_litmus_test.yml

cat $run_test


bash ../Openshift-EE/utils/litmus_job_runner label='app:elasticsearch-deployment-litmus' job=$run_test

echo "Dumping state of cluster post job run"; echo ""
cd ..
bash Openshift-EE/utils/dump_cluster_state;
bash Openshift-EE/utils/event_updater jobname:elasticsearch-provision $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"                     


if [ "$?" != "0" ]; then
#python3 Openshift-EE/utils/result/result_update.py $job_id 5Q19 3-functional "Deploying elasticsearch application" Fail $pipeline_id "$current_time" $commit_id $gittoken
exit 1;
fi

current_time=$(eval $time)
bash Openshift-EE/utils/e2e-cr jobname:elasticsearch-provision jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" test_result:Pass
#python3 Openshift-EE/utils/result/result_update.py $job_id 5Q19 3-functional "Scale the statefulset application replicas and verify the ring configuration" Pass $pipeline_id "$current_time" $commit_id $gittoken

}

if [ "$1" == "node" ];then
  node $2 $3 $4
else
  pod
fi

# Deploying elasticsearch Liveness Job 

# testcase for elasticsearch liveness is derived from litmus job vars.yml

test_name=$(bash Openshift-EE/utils/generate_test_name testcase=elasticsearch-liveness metadata="")
echo $test_name

cd litmus

# Running the litmus test
run_test=apps/elasticsearch/liveness/run_litmus_test.yml

cat $run_test

# Run the Litmus job and get the details of the litmus job from litmus_job_runner utils.
bash ../Openshift-EE/utils/litmus_job_runner label='liveness:litmus-elasticsearch-liveness' job=$run_test 


# Dumping state of cluster post job run
cd ..
#Get the cluster state Once the litmus jobs completed.
bash Openshift-EE/utils/dump_cluster_state;
#Update the e2e event for the job
bash Openshift-EE/utils/event_updater jobname:elasticsearch-provision $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

# Update the result of the test case in github mayadata-io/e2e-openshift repository.
if [ "$?" != "0" ]; then
#python3 Openshift-EE/utils/result/result_update.py $job_id ELHN 3-functional "Deploying prometheus liveness job" Fail $pipeline_id "$current_time" $commit_id $gittoken
exit 1;
fi

# Update the e2e cr once the job is completed
testResult=$(kubectl get litmusresult ${test_name} --no-headers -o custom-columns=:spec.testStatus.result)
current_time=$(eval $time)
bash Openshift-EE/utils/e2e-cr jobname:elasticsearch-provision jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" test_result:"$testResult"
#python3 Openshift-EE/utils/result/result_update.py $job_id 5Q19 3-functional "Scale the statefulset application replicas and verify the ring configuration" Pass $pipeline_id "$current_time" $commit_id $gittoken

}

if [ "$1" == "node" ];then
  node $2 $3 $4
else
  pod
fi