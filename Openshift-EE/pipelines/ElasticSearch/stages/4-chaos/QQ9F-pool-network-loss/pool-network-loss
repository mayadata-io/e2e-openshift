#!/bin/bash
set -x

pod() {  
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p 1658 'cd e2e-openshift && bash Openshift-EE/pipelines/ElasticSearch/stages/4-chaos/QQ9F-pool-network-loss/pool-network-loss node '"'$CI_JOB_ID'"''
}

node() {
job_id=$(echo $1)
echo $job_id
echo "*********Applying e2e-crd***********"
kubectl apply -f Openshift-EE/utils/e2e-crd.yml

echo "****Creating e2e-crd********"
cat Openshift-EE/utils/e2e-result.yml > pool-network-loss-result.yml
sed -i -e "s/<test-phase>/Running/g" -e "s/<test-name>/pool-network-loss/g" -e"s/<job_id>/$job_id/g" pool-network-loss-result.yml

time="date"
current_time=$(eval $time)
sed -i -e "s/<test-init>/$current_time/g" -e "s/<openebs-id>/0.8.1/g" pool-network-loss-result.yml
kubectl apply -f pool-network-loss-result.yml
cat pool-network-loss-result.yml

echo "*******Deploying Application****"
sleep 5
echo "      Application-Deployment: Pass" >> pool-network-loss-result.yml
cat pool-network-loss-result.yml
kubectl apply -f pool-network-loss-result.yml

echo "*******Generating load**********"
sleep 5
echo "      Application-Loadgen: Pass" >> pool-network-loss-result.yml
cat pool-network-loss-result.yml
kubectl apply -f pool-network-loss-result.yml

echo "*******Inducing pool network loss************"
sleep 5
echo "      pool-network-loss: Fail" >> pool-network-loss-result.yml
cat pool-network-loss-result.yml
kubectl apply -f pool-network-loss-result.yml

echo "*******Deprovisioning Application******"
sleep 5
echo "      Application-Deprovisioning: Pass" >> pool-network-loss-result.yml
cat pool-network-loss-result.yml
kubectl apply -f pool-network-loss-result.yml

current_time=$(eval $time)
sed -i -e "s/<test-finish>/$current_time/g" pool-network-loss-result.yml
sed -i -e "s/<test-result>/Fail/g" pool-network-loss-result.yml
cat pool-network-loss-result.yml
}

if [ "$1" == "node" ];then
  node $2
else
  pod
fi
