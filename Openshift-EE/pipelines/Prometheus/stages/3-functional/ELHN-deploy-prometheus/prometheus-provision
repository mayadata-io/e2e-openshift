#!/bin/bash
set -x

pod() {
echo $CI_JOB_ID
###clone e2e-openshift-repo
echo "cloning e2e-openshift repo*************"
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p 1658 'git clone https://github.com/mayadata-io/e2e-openshift.git'
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p 1658 'cd e2e-openshift && git checkout prometheus && bash Openshift-EE/pipelines/Prometheus/stages/3-functional/ELHN-deploy-prometheus/prometheus-provision node '"'$CI_JOB_ID'"''
}

node() {
job_id=$(echo $1)
time="date"
current_time=$(eval $time)
echo "*********Applying e2e-crd***********"
kubectl apply -f Openshift-EE/utils/e2e-crd.yml

bash Openshift-EE/utils/e2e-cr jobname:prometheus-provision jobphase:Waiting
bash Openshift-EE/utils/e2e-cr jobname:prometheus-provision jobphase:Running init_time:"$current_time"

# Removing test_id from e2e-result.yml spec for simple mode
#sed -i "s/-<job_id>/ /g" Openshift-EE/utils/result-volume-replica-distribution.yml

echo "*******Deploying Prometheus Application****"
#kubectl apply -f Openshift-EE/utils/result-prometheus-provision.yml

test_name=$(bash Openshift-EE/utils/generate_test_name testcase=prometheus-deployment metadata="")
echo $test_name

cd litmus

echo "Running the litmus test.."
run_test=apps/prometheus/deployers/run_litmus_test.yml

cat $run_test


bash ../Openshift-EE/utils/litmus_job_runner label='app:prometheus-deployment-litmus' job=$run_test

echo "Dumping state of cluster post job run"; echo ""
cd ..
bash Openshift-EE/utils/dump_cluster_state;
bash Openshift-EE/utils/event_updater jobname:prometheus-provisioning $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"


if [ "$?" != "0" ]; then
#python3 Openshift-EE/utils/result/result_update.py $job_id ELHN 3-functional "Deploying prometheus application" Fail $pipeline_id "$current_time" $commit_id $gittoken
exit 1;
fi


echo "*******Deploying Prometheus Loadgen Application****"
#kubectl apply -f Openshift-EE/utils/result-loadgen-provision.yml

test_name=$(bash Openshift-EE/utils/generate_test_name testcase=avalanche-deployment metadata="")
echo $test_name

cd litmus

echo "Running the litmus test.."
run_test=apps/prometheus/loadgen/run_litmus_test.yml

cat $run_test

bash ../Openshift-EE/utils/litmus_job_runner label='app:prometheus-loadgen-litmus' job=$run_test 

echo "Dumping state of cluster post job run"; echo ""
cd ..
bash Openshift-EE/utils/dump_cluster_state;
bash Openshift-EE/utils/event_updater jobname:prometheus-provisioning $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

if [ "$?" != "0" ]; then
#python3 Openshift-EE/utils/result/result_update.py $job_id ELHN 3-functional "Deploying prometheus loadgen application" Fail $pipeline_id "$current_time" $commit_id $gittoken
exit 1;
fi

current_time=$(eval $time)
bash Openshift-EE/utils/e2e-cr jobname:prometheus-provisioning jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" test_result:Pass
#python3 Openshift-EE/utils/result/result_update.py $job_id ELHN 3-functional "Scale the statefulset application replicas and verify the ring configuration" Pass $pipeline_id "$current_time" $commit_id $gittoken

}

if [ "$1" == "node" ];then
  node $2
else
  pod
fi