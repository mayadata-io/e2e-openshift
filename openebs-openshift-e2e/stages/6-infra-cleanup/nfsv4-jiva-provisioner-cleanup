#!/bin/bash

pod() {
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port 'cd e2e-openshift && bash openebs-openshift-e2e/stages/7-jiva-csi-infra-cleanup/JCSI42-nfsv4-jiva-provisioner-cleanup/nfsv4-jiva-provisioner-cleanup node '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"' '"'$RELEASE_TAG'"'
}

node() {

job_id=$(echo $1)
pipeline_id=$(echo $2)
case_id=JCSI42
commit_id=$(echo $3)
releaseTag=$(echo $4)
source ~/.profile
gittoken=$(echo "$github_token")
time="date"
current_time=$(eval $time)

bash openebs-openshift-e2e/utils/e2e-cr jobname:nfsv4-jiva-deprovision jobphase:Waiting
bash openebs-openshift-e2e/utils/e2e-cr jobname:nfsv4-jiva-deprovision jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag"

kubectl delete daemonset --all -n app-nfsv4-jiva

run_id="jiva-cleanup";test_name=$(bash openebs-openshift-e2e/utils/generate_test_name testcase=nfs-provision metadata=${run_id})
echo $test_name
cd jiva-operator/e2e-tests

# copy the content of deployer run_e2e_test.yml into a different file to update the test specific parameters.
cp providers/nfs-provisioner/run_e2e_test.yml nfsv4-jiva-deprovision.yml

#################
## RUNNER MAIN ##
#################
sed -i -e 's/app: nfs-e2e/app: nfsv4-jiva-deprovision-e2e/g' \
-e 's/imagePullPolicy: Always/imagePullPolicy: IfNotPresent/g' \
-e 's/value: app-nfs-ns/value: app-nfsv4-jiva/g' \
-e 's/value: openebs-cstor-disk/value: jiva-csi-sc/g' \
-e 's/value: provision/value: deprovision/g' \
-e 's/value: openebs-nfs/value: openebs-nfs4/g' nfsv4-jiva-deprovision.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' nfsv4-jiva-deprovision.yml

rc_val=$(echo $?)

echo "Running the e2e test.."

cat nfsv4-jiva-deprovision.yml

bash ../../openebs-openshift-e2e/utils/e2e_job_runner label='app:nfsv4-jiva-deprovision-e2e' job=nfsv4-jiva-deprovision.yml
bash ../../openebs-openshift-e2e/utils/dump_cluster_state;
cd ../..
bash openebs-openshift-e2e/utils/event_updater jobname:nfsv4-jiva-deprovision $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

#################
## GET RESULT  ##
#################
rc_val=$(echo $?)

nameSpace=$(kubectl get ns --no-headers | grep -vE "openebs|e2e|kube-service-catalog|default|kube-system|logging|openshift|kube-node-lease|kube-public" | awk {'print $1'})
kubectl delete ns $nameSpace
kubectl get ns

## Check the test status & result from the e2e result custom resource
source ~/.profile
gittoken=$(echo "$github_token")
testResult=$(kubectl get e2eresult ${test_name} --no-headers -o custom-columns=:spec.testStatus.result)
current_time=$(eval $time)

if [ "$rc_val" != "0" ]; then
bash openebs-openshift-e2e/utils/e2e-cr jobname:nfsv4-jiva-deprovision jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:Fail
#python3 openebs-openshift-e2e/utils/result/result_update.py $job_id JCSI42 7-jiva-csi-infra-cleanup "Cleanup NFS provisioner and corresponding storage class" $testResult $pipeline_id "$current_time" $commit_id $gittoken
exit 1;
fi

bash openebs-openshift-e2e/utils/e2e-cr jobname:nfsv4-jiva-deprovision jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:Pass

#python3 openebs-openshift-e2e/utils/result/result_update.py $job_id JCSI42 7-jiva-csi-infra-cleanup "Cleanup NFS provisioner and corresponding storage class" $testResult $pipeline_id "$current_time" $commit_id $gittoken

if [ "$rc_val" != "0" ]; then
exit 1;
fi
}

if [ "$1" == "node" ];then
  node $2 $3 $4 $5
else
  pod
fi
