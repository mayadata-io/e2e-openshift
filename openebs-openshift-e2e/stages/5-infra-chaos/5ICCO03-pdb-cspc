#!/bin/bash

pod() {
mkdir -p /root/.ssh
touch /root/.ssh/id_rsa
echo "$SSH_KEYS" > /root/.ssh/id_rsa
chmod 600 /root/.ssh/id_rsa	
node_name=$(ssh -o StrictHostKeyChecking=no $user@$ip -i /root/.ssh/id_rsa kubectl get nodes --no-headers | grep -v master | awk 'FNR==1 {print $1}')

ssh -o StrictHostKeyChecking=no $user@$ip -i /root/.ssh/id_rsa "kubectl taint nodes $node_name infra-aid=observer:NoSchedule"
ssh -o StrictHostKeyChecking=no $user@$ip -i /root/.ssh/id_rsa "mkdir infra && echo $node_name >> infra/node_name"

echo $node_name
ssh -o StrictHostKeyChecking=no $user@$ip -i /root/.ssh/id_rsa 'cd e2e-openshift && bash openebs-openshift-e2e/stages/5-infra-chaos/5ICCO03-pdb-cspc node '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"' '"'$RELEASE_TAG'"' '"'$node_name'"'
}

node() {
source ~/.profile
#gittoken=$(echo "$github_token")

job_id=$(echo $1)
pipeline_id=$(echo $2)
commit_id=$(echo $3)
releaseTag=$(echo $4)
observer_node=$(echo $5)
case_id=5ICC03

time="date"
current_time=$(eval $time)

present_dir=$(pwd)
echo $present_dir

bash openebs-openshift-e2e/utils/e2e-cr jobname:pdb-cspc jobphase:Waiting
bash openebs-openshift-e2e/utils/e2e-cr jobname:pdb-cspc jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag"

################
# e2eBook 1 #
################

echo "*******Deploying Percona Application****"

run_id="pdb";test_name=$(bash openebs-openshift-e2e/utils/generate_test_name testcase=percona-deployment metadata=${run_id})
echo $test_name

cd cstor-operators/e2e-tests
echo "Running the e2e test for Percona Deployment.."

cp apps/percona/deployers/run_e2e_test.yml percona_deploy_pdb.yml

sed -i -e 's/app: percona-deployment/app: deploy-percona-pdb/g' \
-e 's/value: openebs-cstor-csi/value: openebs-cstor-csi/g' \
-e '/name: TARGET_AFFINITY_CHECK/{n;s/value: enable/value: disable/g}' \
-e 's/value: app-percona-ns/value: percona-pdb/g' percona_deploy_pdb.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' percona_deploy_pdb.yml

cat percona_deploy_pdb.yml

bash ../../openebs-openshift-e2e/utils/e2e_job_runner label='app:deploy-percona-pdb' job=percona_deploy_pdb.yml
cd ../..
bash openebs-openshift-e2e/utils/dump_cluster_state;
bash openebs-openshift-e2e/utils/event_updater jobname:pdb-cspc $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

if [ "$?" != "0" ]; then
#python3 openebs-openshift-e2e/utils/result/result_update.py $job_id 5ICC03 5-infra-chaos "Ensure that CSPC pool pod not getting evicted violating pod disruption budget" Fail "$current_time" $#gittoken
exit 1;
fi

################
# e2eBook 2 #
################

echo "*******Performing CSPC pool pod disruption budget test**********"

test_name=$(bash openebs-openshift-e2e/utils/generate_test_name testcase=cspc-pod-disruption-budget metadata="")
echo $test_name

cd cstor-operators/e2e-tests
cp experiments/chaos/cspc_pod_disruption_budget/run_e2e_test.yml run_cspc_pdb_test.yml

sed -i '/name: CSPC_NAME/{n;s/.*/            value: cstor-cspc-disk-pool/}' run_cspc_pdb_test.yml
sed -i -e "s|#nodeSelector|nodeSelector|g" \
-e "s|#  kubernetes.io/hostname:|  kubernetes.io/hostname: ${observer_node}|g" run_cspc_pdb_test.yml

bash ../../openebs-openshift-e2e/utils/e2e_job_runner label='name:cspc-pdb' job=run_cspc_pdb_test.yml
cd ../..
bash openebs-openshift-e2e/utils/dump_cluster_state;
bash openebs-openshift-e2e/utils/event_updater jobname:pdb-cspc $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

rc_val=$(echo $?)
current_time=$(eval $time)

if [ "$rc_val" != "0" ]; then
bash openebs-openshift-e2e/utils/e2e-cr jobname:pdb-cspc jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:Fail
#python3 openebs-openshift-e2e/utils/result/result_update.py $job_id 5ICC03 5-infra-chaos "Ensure that CSPC pool pod not getting evicted violating pod disruption budget." Fail "$current_time" $#gittoken
exit 1;
fi

bash openebs-openshift-e2e/utils/e2e-cr jobname:pdb-cspc jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:Pass
#python3 openebs-openshift-e2e/utils/result/result_update.py $job_id 5ICC03 5-infra-chaos "Ensure that CSPC pool pod not getting evicted violating pod disruption budget." Pass "$current_time" $#gittoken

if [ "$rc_val" != "0" ]; then
exit 1;
fi

}

if [ "$1" == "node" ];then
  node $2 $3 $4 $5 $6
else
  pod
fi