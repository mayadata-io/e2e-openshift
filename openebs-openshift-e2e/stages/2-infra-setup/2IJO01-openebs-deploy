#!/bin/bash

pod() {
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port 'cd e2e-openshift && bash openebs-openshift-e2e/stages/2-infra-setup/2IJO01-openebs-deploy node '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"' '"'$RELEASE_TAG'"' '"'$RELEASE_BRANCH'"' '"'$COMMIT_ID'"' '"'$RC_TAG'"'
}

node() {
job_id=$(echo $1)
pipeline_id=$(echo $2)
commit_id=$(echo $3)
releaseTag=$(echo $4)
release_branch=$(echo $5)
case_id=2IJO01
release_commit_id=$(echo $6)
rc_tag=$(echo $7)

time="date"
current_time=$(eval $time)

present_dir=$(pwd)
echo $present_dir

echo "releaseTag=$releaseTag"
echo "rctag=$rc_tag"
echo "releasebranch=$release_branch"

# Applying e2e-CRD
echo "***Applying e2e-crd***********"

kubectl apply -f openebs-openshift-e2e/utils/e2e-crd.yml

echo "*****Deploying openebs*******"
bash openebs-openshift-e2e/utils/e2e-cr jobname:openebs-deploy jobphase:Waiting
bash openebs-openshift-e2e/utils/e2e-cr jobname:openebs-deploy jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag"
bash openebs-openshift-e2e/utils/e2e-cr jobname:jiva-operator jobphase:Waiting
bash openebs-openshift-e2e/utils/e2e-cr jobname:storage-policies jobphase:Waiting 
bash openebs-openshift-e2e/utils/e2e-cr jobname:nfsv4-jiva-provision jobphase:Waiting

source ~/.profile

echo "Generating test name***************************"

test_name=$(bash openebs-openshift-e2e/utils/generate_test_name testcase=openebs-provision metadata="")
echo $test_name

git clone https://github.com/openebs/jiva-operator.git

cd jiva-operator/e2e-tests

wget https://raw.githubusercontent.com/openebs/upgrade/master/e2e-tests/experiments/openebs-provision/run_e2e_test.yml

mv run_e2e_test.yml run_operator.yml

export OPENEBS_VERSION=$release_branch
export COMMIT_ID=$release_commit_id
export RC_TAG=$rc_tag

wget https://raw.githubusercontent.com/openebs/e2e-infrastructure/master/env-update/env.py
python3 env.py -f run_operator.yml

cat run_operator.yml

#################
## RUNNER MAIN ##
#################

kubectl apply -f ./hack/rbac.yaml
kubectl apply -f ./hack/crds.yaml

echo "Running e2e test for openebs deploy.."

run_test=run_operator.yml
bash ../../openebs-openshift-e2e/utils/e2e_job_runner label='provider:openebs-runner' job=$run_test

echo "Dumping state of cluster post job run"; echo ""
bash ../../openebs-openshift-e2e/utils/dump_cluster_state;
cd ../..
bash openebs-openshift-e2e/utils/event_updater jobname:openebs-deploy $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

#################
## GET RESULT  ##
#################
rc_val=$(echo $?)
test_case_id="2IJO01"

## Check the test status & result from the e2e result custom resource
source ~/.profile
gittoken=$(echo "$github_token")
testResult=$(kubectl get e2eresult ${test_name} --no-headers -o custom-columns=:spec.testStatus.result)

current_time=$(eval $time)
bash openebs-openshift-e2e/utils/e2e-cr jobname:openebs-deploy jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:$testResult

if [ "$rc_val" != "0" ]; then
exit 1;
fi

}

if [ "$1" == "node" ];then
  node $2 $3 $4 $5 $6 $7 $8
else
  pod
fi
