#!/bin/bash

pod() {
mkdir -p /root/.ssh
touch /root/.ssh/id_rsa
echo "$SSH_KEYS" > /root/.ssh/id_rsa
chmod 600 /root/.ssh/id_rsa
ssh -o StrictHostKeyChecking=no $user@$ip -p $port -i /root/.ssh/id_rsa 'cd e2e-openshift && bash openebs-openshift-e2e/stages/2-infra-setup/2ICO05-openebs-dynamic-nfs node '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"' '"'$NFS_RELEASE_TAG'"' '"'$NFS_IMAGE_TYPE'"' '"'$NFS_COMMIT_ID'"'
}

node() {

time="date"
current_time=$(eval $time)
job_id=$(echo $1)
pipeline_id=$(echo $2)
commit_id=$(echo $3)
releaseTag=$(echo $4)
image_type=$(echo $5)
release_commit_id=$(echo $6)
case_id=2ICO05
source ~/.profile

present_dir=$(pwd)
echo $present_dir

#pooling over previous job to complete
echo "***********Applying openebs-storage-clas********"
bash openebs-openshift-e2e/utils/pooling jobname:cstor-csi-storage-policies
bash openebs-openshift-e2e/utils/e2e-cr jobname:openebs-nfs-provisioner jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag"

run_id="csi-sc";test_name=$(bash openebs-openshift-e2e/utils/generate_test_name testcase=nfs-provisioner-provision metadata=${run_id})
echo $test_name

git clone https://github.com/openebs/dynamic-nfs-provisioner.git
cd dynamic-nfs-provisioner/e2e-tests
cp experiments/dynamic-nfs-provisioner/run_e2e_test.yml cstor-nfs.yaml

sed -i -e "/name: RELEASE_VERSION/{n;s/.*/            value: ${releaseTag}/g}" \
-e "/name: COMMIT_ID/{n;s/.*/            value: ${release_commit_id}/g}" \
-e "/name: NFS_SC_NAME/{n;s/.*/            value: openebs-nfs-cstor-rwx/g}" \
-e "/name: BACKEND_SC_NAME/{n;s/.*/            value: openebs-cstor-csi/g}" \
-e "/name: IMAGE_TYPE/{n;s/.*/            value: ${image_type}/g}" cstor-nfs.yaml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' cstor-nfs.yaml

cat cstor-nfs.yaml

bash ../../openebs-openshift-e2e/utils/e2e_job_runner label='provider:dynamic-nfs-operator' job=cstor-nfs.yaml

echo "Dumping state of cluster post job run"; echo ""
bash ../../openebs-openshift-e2e/utils/dump_cluster_state;

cd ../..
bash openebs-openshift-e2e/utils/event_updater jobname:openebs-nfs-provisioner $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"
#################
## GET RESULT  ##
#################
rc_val=$(echo $?)

## Check the test status & result from the e2e result custom resource
source ~/.profile
testResult=$(kubectl get e2eresult ${test_name} --no-headers -o custom-columns=:spec.testStatus.result)

current_time=$(eval $time)
bash openebs-openshift-e2e/utils/e2e-cr jobname:openebs-nfs-provisioner jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:$testResult 

if [ "$rc_val" != "0" ]; then
exit 1;
fi

}

if [ "$1" == "node" ];then
  node $2 $3 $4 $5 $6 $7
else
  pod
fi
