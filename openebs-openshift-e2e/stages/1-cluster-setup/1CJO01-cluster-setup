#!/bin/bash

time="$(TZ=IST date)"
current_time=$time
echo $current_time

echo "***Checking the cluster is Engaged or not*"

state="sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port 'ls | grep e2e-openshift'"
cluster_state=$(eval $state)

while [ "${cluster_state}" == "e2e-openshift" ]; do
  echo "***cluster is Engaged******"
  wait=1
  cluster_state=$(eval $state)
  sleep 30
done

if [ "$wait" == "1" ]; then
sleep 120
fi  

echo "*************************Checking the Cluster's Health********************"

echo "Checking for the number of nodes in ready state*******************************"
ready_nodes=$(sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port kubectl get nodes --no-headers | grep -v NotReady | wc -l)

git_token=$(sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port 'cat ~/.profile | grep github_token | cut -d= -f2')
gittoken=$(echo $git_token | tr -d '"')

echo "Checking for the pending certificates"
cert=$(sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port oc get csr -no-headers | grep Pending | wc -l)
if [ "$cert" -gt 0 ]; then
echo "Openshift CSR's are pending kindly approve it and take snapshot"
exit;
fi

if [ "$ready_nodes" -eq 7 ]; then
echo "Number of nodes in ready state is $ready_nodes"
echo "******Cluster is in Healthy state****"

echo "*************Dumping cluster state********"
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port kubectl get nodes
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port kubectl get pod --all-namespaces

echo "cloning e2e-openshift repo*************"
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port 'git clone -b test-branch https://github.com/mayadata-io/e2e-openshift.git'
else
echo "All nodes are not ready"
echo "******Cluster is in Unhealthy state*******"
echo "cloning e2e-openshift repo*************"
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port 'git clone -b test-branch https://github.com/mayadata-io/e2e-openshift.git'
exit 1;
fi
