#!/bin/bash

pod() {
mkdir -p /root/.ssh
touch /root/.ssh/id_rsa
echo "$SSH_KEYS" > /root/.ssh/id_rsa
chmod 600 /root/.ssh/id_rsa	
ssh -o StrictHostKeyChecking=no $user@$ip -i /root/.ssh/id_rsa 'cd e2e-openshift && bash openebs-openshift-e2e/stages/3-functional/3FCO01-csi-volume-resize node '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"' '"'$RELEASE_TAG'"'
}

node() {
source ~/.profile
#gittoken=$(echo "$github_token")

job_id=$(echo $1)
pipeline_id=$(echo $2)
commit_id=$(echo $3)
releaseTag=$(echo $4)
case_id=3FCO01

time="date"
current_time=$(eval $time)

present_dir=$(pwd)
echo $present_dir

bash openebs-openshift-e2e/utils/e2e-cr jobname:csi-volume-resize-ext4 jobphase:Waiting init_time:"$current_time"
bash openebs-openshift-e2e/utils/e2e-cr jobname:csi-volume-resize-ext4 jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag"

################
# e2eBook 1 #
################

echo "****Deploying busybox Application using CSI****"
oc adm policy add-scc-to-user anyuid system:serviceaccount:busybox-csi:default

run_id="ext";test_name=$(bash openebs-openshift-e2e/utils/generate_test_name testcase=busybox-provision-busybox-csi metadata=${run_id})
echo $test_name

cd cstor-operators/e2e-tests
echo "Running the e2e test for busybox Deployment.."
cp apps/busybox/deployers/run_e2e_test.yml deploy_csi_busybox.yml

sed -i -e 's/value: app-busybox-ns/value: busybox-csi/g' \
-e 's/app: busybox-e2e/app: busybox-e2e-csi/g' \
-e 's/generateName: e2e-busybox-deploy-/generateName: e2e-busybox-csi-/g' \
-e 's/value: statefulset/value: deployment/g' deploy_csi_busybox.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' deploy_csi_busybox.yml

cat deploy_csi_busybox.yml

bash ../../openebs-openshift-e2e/utils/e2e_job_runner label='app:busybox-e2e-csi' job=deploy_csi_busybox.yml
cd ../..
bash openebs-openshift-e2e/utils/dump_cluster_state;
bash openebs-openshift-e2e/utils/event_updater jobname:deploy-busybox-csi $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

if [ "$?" != "0" ]; then
##python3 openebs-openshift-e2e/utils/result/result_update.py $job_id 3FCO01 3-functional "Check if the volume size is changed" Fail "$current_time" $#gittoken
exit 1;
fi

################
# e2eBook 2 #
################

run_id="ext";test_name=$(bash openebs-openshift-e2e/utils/generate_test_name testcase=csi-volume-resize metadata=${run_id})
echo $test_name

cd cstor-operators/e2e-tests
cp experiments/functional/csi-volume-resize/run_e2e_test.yml run_cstor_volume_resize_test.yml

sed -i -e '/name: APP_PVC/{n;s/.*/            value: openebs-busybox/g}' \
-e '/name: APP_LABEL/{n;s/.*/            value: app=busybox/g}' \
-e '/name: STORAGE_CLASS/{n;s/.*/            value: openebs-cstor-csi/g}' \
-e 's/app: csi-vol-resize/app: csi-vol-resize-ext4/g' \
-e '/name: PV_CAPACITY/{n;s/.*/            value: 5Gi/g}' \
-e '/name: NEW_CAPACITY/{n;s/.*/            value: 10Gi/g}' \
-e '/name: APP_NAMESPACE/{n;s/.*/            value: busybox-csi/g}' run_cstor_volume_resize_test.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' run_cstor_volume_resize_test.yml

cat run_cstor_volume_resize_test.yml

bash ../../openebs-openshift-e2e/utils/e2e_job_runner label='app:csi-vol-resize-ext4' job=run_cstor_volume_resize_test.yml
cd ../..
bash openebs-openshift-e2e/utils/dump_cluster_state;
bash openebs-openshift-e2e/utils/event_updater jobname:csi-volume-resize-ext4 $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"
return_count=$?
current_time=$(eval $time)

if [ "$return_count" != "0" ]; then
bash openebs-openshift-e2e/utils/e2e-cr jobname:csi-volume-resize-ext4 jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:Fail
##python3 openebs-openshift-e2e/utils/result/result_update.py $job_id 3FCO01 3-functional "Check if the volume size is changed" Fail "$current_time" $#gittoken
exit 1;
fi

bash openebs-openshift-e2e/utils/e2e-cr jobname:csi-volume-resize-ext4 jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:Pass
##python3 openebs-openshift-e2e/utils/result/result_update.py $job_id 3FCO01 7-csi-functional "check if the volume size is changed" Pass "$current_time" $#gittoken

if [ "$return_count" != "0" ]; then
exit 1;
fi

}

if [ "$1" == "node" ];then
  node $2 $3 $4 $5
else
  pod
fi