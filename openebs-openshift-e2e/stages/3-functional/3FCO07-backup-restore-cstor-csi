#!/bin/bash

pod() {
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port 'cd e2e-openshift && bash openebs-openshift-e2e/stages/3-functional/3FCO07-backup-restore-cstor-csi node '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"' '"'$RELEASE_TAG'"' '"'$VELERO_VERSION'"' '"'$VELERO_PLUGIN_VERSION'"' '"'$SDK_TOKEN'"'
}

node() {
source ~/.profile
#gittoken=$(echo "$github_token")

job_id=$(echo $1)
pipeline_id=$(echo $2)
commit_id=$(echo $3)
releaseTag=$(echo $4)
velero_version=$(echo $5)
velero_plugin_version=$(echo $6)
sdk_token=$(echo $7)
case_id=3FCO07

time="date"
current_time=$(eval $time)

present_dir=$(pwd)
echo $present_dir

bash openebs-openshift-e2e/utils/e2e-cr jobname:backup-restore-cstor-csi jobphase:Waiting
bash openebs-openshift-e2e/utils/e2e-cr jobname:backup-restore-cstor-csi jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag"

################
# e2eBook 1 #
################

echo "*******Deploying Percona Application using CSI****"

oc adm policy add-scc-to-user anyuid system:serviceaccount:percona-backup-csi:default

run_id="backup";test_name=$(bash openebs-openshift-e2e/utils/generate_test_name testcase=percona-deployment metadata=${run_id})
echo $test_name

cd cstor-operators/e2e-tests
echo "Running the e2e test for Percona Deployment.."

# Storeing GCP service account key in file"
echo "$sdk_token" > key.json

echo "Creating configmap in e2e namespace for GCP token"
kubectl create cm gcp-key -n e2e --from-file /var/sdk/key.json

cp apps/percona/deployers/run_e2e_test.yml percona_backup_restore_csi.yml

sed -i -e 's/app: percona-deployment/app: deploy-percona-backup-restore-csi/g' \
-e '/name: TARGET_AFFINITY_CHECK/{n;s/value: enable/value: disable/g}' \
-e 's/value: app-percona-ns/value: percona-backup-csi/g' percona_backup_restore_csi.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' percona_backup_restore_csi.yml

cat percona_backup_restore_csi.yml

bash ../../openebs-openshift-e2e/utils/e2e_job_runner label='app:deploy-percona-backup-restore-csi' job=percona_backup_restore_csi.yml
cd ../..
bash openebs-openshift-e2e/utils/dump_cluster_state;
bash openebs-openshift-e2e/utils/event_updater jobname:backup-restore-cstor-csi $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

if [ "$?" != "0" ]; then
#python3 openebs-openshift-e2e/utils/result/result_update.py $job_id 3FCO07 3-functional "Create backup and restore and verify if the application is not impacted" Fail "$current_time" $#gittoken
exit 1;
fi

################
# e2eBook 2 #
################

echo "*******Performing Backup and Restore on Target**********"

run_id="backup";test_name=$(bash openebs-openshift-e2e/utils/generate_test_name testcase=velero-backup-restore metadata=${run_id})
echo $test_name

cd cstor-operators/e2e-tests
cp experiments/functional/backup_and_restore/run_e2e_test.yml run_backuprestore_test_cstor_csi.yml

sed -i -e 's/value: app-percona-ns/value: percona-backup-csi/g' \
-e 's/app: velero-backup-restore/app: velero-backup-restore-cstor-csi/g' \
-e '/name: DEPROVISION_VELERO/{n;s/.*/            value: "true"/}' run_backuprestore_test_cstor_csi.yml

sed -i "s/v1.1.0/$velero_version/g" run_backuprestore_test_cstor_csi.yml
sed -i "s/plugin:ci/plugin:$velero_plugin_version/g" run_backuprestore_test_cstor_csi.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' run_backuprestore_test_cstor_csi.yml

echo "Running the e2e test for Percona Backup Restore.."
cat run_backuprestore_test_cstor_csi.yml

bash ../../openebs-openshift-e2e/utils/e2e_job_runner label='app:velero-backup-restore-cstor-csi' job=run_backuprestore_test_cstor_csi.yml
cd ../..
bash openebs-openshift-e2e/utils/dump_cluster_state;
bash openebs-openshift-e2e/utils/event_updater jobname:backup-restore-cstor-csi $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

rc_val=$(echo $?)
current_time=$(eval $time)

if [ "$rc_val" != "0" ]; then
bash openebs-openshift-e2e/utils/e2e-cr jobname:backup-restore-cstor-csi jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:Fail
#python3 openebs-openshift-e2e/utils/result/result_update.py $job_id 3FCO07 3-functional "Create backup and restore and verify if the application is not impacted" Fail "$current_time" $#gittoken
exit 1;
fi

bash openebs-openshift-e2e/utils/e2e-cr jobname:backup-restore-cstor-csi jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:Pass
#python3 openebs-openshift-e2e/utils/result/result_update.py $job_id 3FCO07 3-functional "Create backup and restore and verify if the application is not impacted" Pass "$current_time" $#gittoken

if [ "$rc_val" != "0" ]; then
exit 1;
fi

}

if [ "$1" == "node" ];then
  node $2 $3 $4 $5 $6 $7 $8
else
  pod
fi
