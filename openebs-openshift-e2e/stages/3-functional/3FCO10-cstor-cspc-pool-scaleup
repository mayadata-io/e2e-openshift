#!/bin/bash

pod() {
mkdir -p /root/.ssh
touch /root/.ssh/id_rsa
echo "$SSH_KEYS" > /root/.ssh/id_rsa
chmod 600 /root/.ssh/id_rsa
ssh -o StrictHostKeyChecking=no $user@$ip -p $port -i /root/.ssh/id_rsa 'cd e2e-openshift && bash openebs-openshift-e2e/stages/3-functional/3FCO10-cstor-cspc-pool-scaleup node '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"' '"'$RELEASE_TAG'"'
}

node() {
source ~/.profile
#gittoken=$(echo "$github_token")
job_id=$(echo $1)
pipeline_id=$(echo $2)
commit_id=$(echo $3)
releaseTag=$(echo $4)
case_id=3FCO10

time="date"
current_time=$(eval $time)

present_dir=$(pwd)
echo $present_dir

bash openebs-openshift-e2e/utils/e2e-cr jobname:cstor-cspc-pool-scaleup jobphase:Waiting
bash openebs-openshift-e2e/utils/e2e-cr jobname:cstor-cspc-pool-expansion jobphase:Waiting
bash openebs-openshift-e2e/utils/e2e-cr jobname:cstor-cspc-pool-replace-blockdevice jobphase:Waiting
bash openebs-openshift-e2e/utils/e2e-cr jobname:blockdevice-reusability jobphase:Waiting
bash openebs-openshift-e2e/utils/e2e-cr jobname:cstor-cspc-pool-scaleup jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag"

################
# e2eBook 1 #
################

echo "****Deploying busybox Application using CSI****"
oc adm policy add-scc-to-user anyuid system:serviceaccount:busybox-csi-mirror:default

test_name=$(bash openebs-openshift-e2e/utils/generate_test_name testcase=busybox-provision-busybox-csi-mirror metadata='')
echo $test_name

cd cstor-operators/e2e-tests
echo "Running the e2e test for busybox Deployment.."
cp apps/busybox/deployers/run_e2e_test.yml deploy_mirror_csi_busybox.yml

sed -i -e 's/value: app-busybox-ns/value: busybox-csi-mirror/g' \
-e 's/app: busybox-e2e/app: busybox-e2e-csi-mirror/g' \
-e 's/generateName: e2e-busybox-deploy-/generateName: e2e-busybox-csi-mirror-/g' \
-e 's/value: statefulset/value: deployment/g' \
-e 's/value: openebs-cstor-csi/value: openebs-cstor-csi-sc/g' deploy_mirror_csi_busybox.yml

cat deploy_mirror_csi_busybox.yml

bash ../../openebs-openshift-e2e/utils/e2e_job_runner label='app:busybox-e2e-csi-mirror' job=deploy_mirror_csi_busybox.yml
cd ../..
bash openebs-openshift-e2e/utils/dump_cluster_state;
bash openebs-openshift-e2e/utils/event_updater jobname:cstor-cspc-pool-scaleup $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

if [ "$?" != "0" ]; then
exit 1;
fi

################
# e2eBook 2 #
################

echo "****Busybox liveness****"

run_id="csi-mirror";test_name=$(bash openebs-openshift-e2e/utils/generate_test_name testcase=busybox-liveness metadata=${run_id})
echo $test_name

cd cstor-operators/e2e-tests
echo "Running the e2e test for busybox liveness..."
cp apps/busybox/liveness/run_e2e_test.yml liveness_csi_mirror_busybox.yml

sed -i -e 's/liveness: e2e-busybox-liveness/liveness: e2e-busybox-csi-mirror-liveness/g' \
-e 's/generateName: e2e-busybox-liveness-/generateName: e2e-busybox-csi-mirror-liveness-/g' \
-e 's/value: app-busybox-ns/value: busybox-csi-mirror/g' liveness_csi_mirror_busybox.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' liveness_csi_mirror_busybox.yml

cat liveness_csi_mirror_busybox.yml

bash ../../openebs-openshift-e2e/utils/e2e_job_runner label='liveness:e2e-busybox-csi-mirror-liveness' job=liveness_csi_mirror_busybox.yml
cd ../..
bash openebs-openshift-e2e/utils/dump_cluster_state;
bash openebs-openshift-e2e/utils/event_updater jobname:cstor-cspc-pool-scaleup $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"
rc_val=$(echo $?)
current_time=$(eval $time)

if [ "$rc_val" != "0" ]; then
exit 1;
fi

################
# e2eBook 3 #
################

# run_id="busybox-csi-cstor";test_name=$(bash openebs-openshift-e2e/utils/generate_test_name testcase=data-persistence-check metadata=${run_id})
# echo $test_name

# cd cstor-operators/e2e-tests
# echo "Running the e2e test to check data-persistence for BusyBox Application..."
# cp experiments/functional/data-persistence/run_e2e_test.yml bb_cstor_deployment_data_persistence.yml

# sed -i -e 's/generateName: data-persistence-e2e-/generateName: data-persistence-busybox-deployment-cstor-/g' \
# -e 's/name: data-persistence/name: bb-cstor-deployment-configmap/g' \
# -e 's/name: e2e-data-persistence/name: data-persistence-busybox-deployment-cstor/g' \
# -e '/name: APP_NAMESPACE/{n;s/.*/            value: busybox-csi-mirror/}' \
# -e '/name: APP_LABEL/{n;s/.*/            value: '\''app=busybox'\''/}' \
# -e '/name: STATUS/{n;s/.*/            value: LOAD/}' \
# -e '/name: DATA_PERSISTENCE/{n;s/.*/            value: busybox/}' bb_cstor_deployment_data_persistence.yml

# ## Insert the set of variables for busybox data consistency util into configmap spec.
# sed -i '/parameters.yml: |/a \
#     blocksize: 4k \
#     blockcount: 1024 \
#     testfile: busybox_deployment_cstor
# ' bb_cstor_deployment_data_persistence.yml

# sed -i '/command:/i \
#           - name: RUN_ID\
#             value: '"$run_id"'\
# ' bb_cstor_deployment_data_persistence.yml

# cat bb_cstor_deployment_data_persistence.yml

# bash ../../openebs-openshift-e2e/utils/e2e_job_runner label='name:data-persistence-busybox-deployment-cstor' job=bb_cstor_deployment_data_persistence.yml
# cd ../..

# bash openebs-openshift-e2e/utils/dump_cluster_state;
# bash openebs-openshift-e2e/utils/event_updater jobname:cstor-cspc-pool-scaleup $test_name jobid:"$job_id" pipeline_id:"$pipeline_id"

# rc_val=$(echo $?)
# current_time=$(eval $time)

# if [ "$rc_val" != "0" ]; then
# exit 1;
# fi

#####################
#  e2eBook 4    ##
#####################

test_name=$(bash openebs-openshift-e2e/utils/generate_test_name testcase=cstor-cspc-pool-scaleup metadata='')
echo $test_name

cd cstor-operators/e2e-tests
cp experiments/functional/cspc-pool/pool_scaleup/run_e2e_test.yml pool_scaleup.yml

sed -i -e '/name: POOL_NAME/{n;s/.*/            value: cstor-cspc-mirror-pool/}' \
-e '/name: POOL_TYPE/{n;s/.*/            value: mirror/}' \
-e '/name: OPERATOR_NS/{n;s/.*/            value: openebs/}' pool_scaleup.yml

cat pool_scaleup.yml

bash ../../openebs-openshift-e2e/utils/e2e_job_runner label='app:cstor-cspc-pool-scaleup' job=pool_scaleup.yml
cd ../..
bash openebs-openshift-e2e/utils/dump_cluster_state;
bash openebs-openshift-e2e/utils/event_updater jobname:cstor-cspc-pool-scaleup $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

rc_val=$(echo $?)
current_time=$(eval $time)

# if [ "$rc_val" != "0" ]; then
# exit 1;
# fi

# ##############################
# # Verifying Data-persistence #
# ##############################

# run_id="bb-cstor-verify";test_name=$(bash openebs-openshift-e2e/utils/generate_test_name testcase=data-persistence-check metadata=${run_id})
# echo $test_name

# cd cstor-operators/e2e-tests
# echo "Running e2e Book for verifying data-persistence against busybox application."
# cp experiments/functional/data-persistence/run_e2e_test.yml bb_deployment_cstor_verify_data_persistence.yml

# sed -i -e 's/generateName: data-persistence-e2e-/generateName: data-persistence-busybox-cstor-/g' \
# -e 's/name: data-persistence/name: bb-cstor-deployment-configmap/g' \
# -e 's/name: e2e-data-persistence/name: data-persistence-busybox-cstor-delay-verify/g' \
# -e '/name: APP_NAMESPACE/{n;s/.*/            value: busybox-csi-mirror/}' \
# -e '/name: APP_LABEL/{n;s/.*/            value: '\''app=busybox'\''/}' \
# -e '/name: STATUS/{n;s/.*/            value: VERIFY/}' \
# -e '/name: DATA_PERSISTENCE/{n;s/.*/            value: busybox/}' bb_deployment_cstor_verify_data_persistence.yml

# ## Insert the set of variables for busybox data consistency util into configmap spec.
# sed -i '/parameters.yml: |/a \
#     blocksize: 4k \
#     blockcount: 1024 \
#     testfile: busybox_deployment_cstor
# ' bb_deployment_cstor_verify_data_persistence.yml

# sed -i '/command:/i \
#           - name: RUN_ID\
#             value: '"$run_id"'\
# ' bb_deployment_cstor_verify_data_persistence.yml

# cat bb_deployment_cstor_verify_data_persistence.yml

# bash ../../openebs-openshift-e2e/utils/e2e_job_runner label='name:data-persistence-busybox-cstor-delay-verify' job=bb_deployment_cstor_verify_data_persistence.yml
# cd ../..

# bash openebs-openshift-e2e/utils/dump_cluster_state;
# bash openebs-openshift-e2e/utils/event_updater jobname:cstor-cspc-pool-scaleup $test_name jobid:"$job_id" pipeline_id:"$pipeline_id"

# rc_val=$(echo $?)
# current_time=$(eval $time)

if [ "$rc_val" != "0" ]; then
bash openebs-openshift-e2e/utils/e2e-cr jobname:cstor-cspc-pool-scaleup jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" openebs_version:"$releaseTag" test_result:Fail
exit 1;
fi

bash openebs-openshift-e2e/utils/e2e-cr jobname:cstor-cspc-pool-scaleup jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:Pass

}

if [ "$1" == "node" ];then
  node $2 $3 $4 $5
else
  pod
fi
