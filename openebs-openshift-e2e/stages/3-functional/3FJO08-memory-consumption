#!/bin/bash


pod() {
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port 'cd e2e-openshift && bash openebs-openshift-e2e/stages/3-functional/3FJO08-memory-consumption node '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"' '"'$RELEASE_TAG'"'
}

node() {
job_id=$(echo $1)
pipeline_id=$(echo $2)
commit_id=$(echo $3)
releaseTag=$(echo $4)
case_id=JCSI22

source ~/.profile
gittoken=$(echo "$github_token")

time="date"
current_time=$(eval $time)

present_dir=$(pwd)
echo $present_dir

oc adm policy add-scc-to-user anyuid system:serviceaccount:memleak-jiva:default

bash openebs-openshift-e2e/utils/e2e-cr jobname:memory-consumption-jiva jobphase:Waiting init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag"
bash openebs-openshift-e2e/utils/e2e-cr jobname:memory-consumption-jiva jobphase:Running init_time:"$current_time"

################
# e2eBook 1 #
################

test_name=$(bash openebs-openshift-e2e/utils/generate_test_name testcase=memleak-test metadata="")
echo $test_name
cd jiva-operator/e2e-tests

cp experiments/functional/memcheck/run_e2e_test.yml memcheck_jiva.yml

: << EOF
  --------------------------------------------------------------------------------------------------------------
 | specAttribute     | kind     | default busybox value               | test specifc value                      |
  --------------------------------------------------------------------------------------------------------------|
 | storage class     | env      | openebs-standard                    | jiva-csi-sc                             |
 | appNamespace      | env      | memleak                             | memleak-jiva                            | 
  --------------------------------------------------------------------------------------------------------------
EOF

sed -i -e 's/value: openebs-jiva-default/value: jiva-csi-sc/g' memcheck_jiva.yml

cat memcheck_jiva.yml

bash ../../openebs-openshift-e2e/utils/e2e_job_runner label='app:memleak-test' job=memcheck_jiva.yml
cd ../..
bash openebs-openshift-e2e/utils/dump_cluster_state;
bash openebs-openshift-e2e/utils/event_updater jobname:memory-consumption-jiva $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"
rc_val=$(echo $?)

# Obtain the status of the test using e2eresult(lr) 
testResult=$(kubectl get e2eresult ${test_name} --no-headers -o custom-columns=:spec.testStatus.result)
current_time=$(eval $time)

if [ "$rc_val" != "0" ]; then
bash openebs-openshift-e2e/utils/e2e-cr jobname:memory-consumption-jiva jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:$testResult
#python3 openebs-openshift-e2e/utils/result/result_update.py $job_id JCSI22 5-functional "Check if the memory consumption doesn't cross the desired threshold for known workload" $testResult $pipeline_id "$current_time" $commit_id $gittoken
exit 1;
fi

bash openebs-openshift-e2e/utils/e2e-cr jobname:memory-consumption-jiva jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:$testResult
#python3 openebs-openshift-e2e/utils/result/result_update.py $job_id JCSI22 5-functional "Check if the memory consumption doesn't cross the desired threshold for known workload" $testResult $pipeline_id "$current_time" $commit_id $gittoken

if [ "$rc_val" != "0" ]; then
exit 1;
fi
}

if [ "$1" == "node" ];then
  node $2 $3 $4 $5
else
  pod
fi
