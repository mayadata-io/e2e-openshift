#!/bin/bash

pod() {
mkdir -p /root/.ssh
touch /root/.ssh/id_rsa
echo "$SSH_KEYS" > /root/.ssh/id_rsa
chmod 600 /root/.ssh/id_rsa
ssh -o StrictHostKeyChecking=no $user@$ip -i /root/.ssh/id_rsa 'cd e2e-openshift && bash openebs-openshift-e2e/script/2-infra-setup/create-striped-pool/create-striped-pool node '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"' '"'$RELEASE_TAG'"'
}

node() {
job_id=$(echo $1)
pipeline_id=$(echo $2)
commit_id=$(echo $3)
releaseTag=$(echo $4)
source ~/.profile
# gittoken=$(echo "$github_token")

time="date"
current_time=$(eval $time)

# echo "Setting up test dependencies.."
# ${utils_path}/setup_dependencies infra-setup

#pooling over previous job to complete
echo "*******Creating cstor-pool**************"
bash openebs-openshift-e2e/script/utils/pooling jobname:cstor-operator
bash openebs-openshift-e2e/script/utils/e2e-cr jobname:cstor-cspc-striped-pool jobphase:Waiting
bash openebs-openshift-e2e/script/utils/e2e-cr jobname:cstor-cspc-striped-pool jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" openebs_version:"$releaseTag"

test_name=$(bash openebs-openshift-e2e/script/utils/generate_test_name testcase=cstor-pool-provision metadata="")
echo $test_name

git clone https://github.com/openebs/cstor-operators.git
cd  cstor-operators/e2e-tests

kubectl apply -f hack/rbac.yaml
kubectl apply -f hack/crds.yaml

# copy the content of deployer run_e2e_test.yml into a different file to update the test specific parameters.
cp experiments/cstor-operator/cspc-pool-provision/run_e2e_test.yml cspc_create_striped_pool.yml

cat cspc_create_striped_pool.yml

bash ../../openebs-openshift-e2e/script/utils/e2e_job_runner label='app:cstor-cspc-pool-provision' job=cspc_create_striped_pool.yml
bash ../../openebs-openshift-e2e/script/utils/dump_cluster_state;
cd ../..
bash script/utils/event_updater jobname:cstor-cspc-striped-pool $test_name jobid:"$job_id" pipelineid:"$pipeline_id"

#################
## GET RESULT  ##
#################
rc_val=$(echo $?)

## Check the test status & result from the e2e result custom resource
# source ~/.profile
# gittoken=$(echo "$github_token")
testResult=$(kubectl get e2eresult ${test_name} --no-headers -o custom-columns=:spec.testStatus.result)

current_time=$(eval $time)
bash openebs-openshift-e2e/script/utils/e2e-cr jobname:cstor-cspc-striped-pool jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" openebs_version:"$releaseTag" test_result:Pass

if [ "$rc_val" != "0" ]; then
exit 1;
fi
}

if [ "$1" == "node" ];then
  node $2 $3 $4 $5
else
  pod
fi
