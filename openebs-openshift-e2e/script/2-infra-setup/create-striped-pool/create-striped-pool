#!/bin/bash

pod() {
mkdir -p /root/.ssh
touch /root/.ssh/id_rsa
echo "$SSH_KEYS" > /root/.ssh/id_rsa
chmod 600 /root/.ssh/id_rsa
ssh -o StrictHostKeyChecking=no $user@$ip -i /root/.ssh/id_rsa 'cd e2e-openshift && bash openebs-openshift-e2e/script/2-infra-setup/create-striped-pool/create-striped-pool node '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"' '"'$FROM_VERSION'"'
}

node() {
job_id=$(echo $1)
pipeline_id=$(echo $2)
commit_id=$(echo $3)
releaseTag=$(echo $4)

time="date"
current_time=$(eval $time)

#pooling over previous job to complete
echo "*******Creating cstor-pool**************"
bash openebs-openshift-e2e/script/utils/pooling jobname:s2-j1-openebs-deploy
bash openebs-openshift-e2e/script/utils/e2e-cr jobname:s2-j2-cstor-striped-pool jobphase:Waiting
bash openebs-openshift-e2e/script/utils/e2e-cr jobname:s2-j2-cstor-striped-pool jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" openebs_version:"$releaseTag"

run_id="striped";test_name=$(bash openebs-openshift-e2e/script/utils/generate_test_name testcase=cstor-block-device-pool-provision metadata=${run_id})
echo $test_name

git clone https://github.com/openebs/e2e-tests
cd e2e-tests

# copy the content of deployer run_e2e_test.yml into a different file to update the test specific parameters.
cp providers/cstor/cstor-block-device-pool/run_e2e_test.yml create_striped_pool.yml

#################
## RUNNER MAIN ##
#################
echo "Running the e2e test.."

: << EOF
  ---------------------------------------------------------------------------------------------------------------------------------------------     
 | specAttribute     | kind   |         default value                           | test specifc value                                           |
  ---------------------------------------------------------------------------------------------------------------------------------------------
 | e2e job label  | label  | app: cstor-block-device-pool-provision          | app: cstor-striped-pool-provision                            |
 | e2e Job name   | name   | generateName: cstor-block-device-pool-provision | generateName: cstor-block-device-striped-pool-provision      |
 | ImagePullPolicy   | value  | Always                                          | IfNotPresent                                                 |
 | Pool name         | name   | cstor-block-disk-pool                           | cstor-block-disk-pool-stripe                                 |
 ---------------------------------------------------------------------------------------------------------------------------------------------
EOF

sed -i -e 's/app: cstor-block-device-pool-provision/app: cstor-striped-pool-provision/g' \
-e 's/generateName: cstor-block-device-pool-provision/generateName: cstor-block-device-striped-pool-provision/g' \
-e 's/imagePullPolicy: Always/imagePullPolicy: IfNotPresent/g' \
-e 's/value: cstor-block-disk-pool/value: cstor-block-disk-pool-stripe/g' create_striped_pool.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' create_striped_pool.yml

cat create_striped_pool.yml
rc_val=$(echo $?)

bash ../openebs-openshift-e2e/script/utils/e2e_job_runner label='app:cstor-striped-pool-provision' job=create_striped_pool.yml
bash ../openebs-openshift-e2e/script/utils/dump_cluster_state;
cd ..
bash openebs-openshift-e2e/script/utils/event_updater jobname:s2-j2-cstor-striped-pool $test_name jobid:"$job_id" pipelineid:"$pipeline_id"

#################
## GET RESULT  ##
#################
#rc_val=$(echo $?)

## Check the test status & result from the e2e result custom resource
source ~/.profile
gittoken=$(echo "$github_token")
testResult=$(kubectl get e2eresult ${test_name} --no-headers -o custom-columns=:spec.testStatus.result)

current_time=$(eval $time)
bash openebs-openshift-e2e/script/utils/e2e-cr jobname:s2-j2-cstor-striped-pool jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" openebs_version:"$releaseTag" test_result:Pass

if [ "$rc_val" != "0" ]; then
exit 1;
fi
}

if [ "$1" == "node" ];then
  node $2 $3 $4 $5
else
  pod
fi