#!/bin/bash

pod() {
mkdir -p /root/.ssh
touch /root/.ssh/id_rsa
echo "$SSH_KEYS" > /root/.ssh/id_rsa
chmod 600 /root/.ssh/id_rsa
ssh -o StrictHostKeyChecking=no $user@$ip -i /root/.ssh/id_rsa 'cd e2e-openshift && bash openebs-openshift-e2e/script/4-migrate-openebs/upgrade-control-node node '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"' '"'$RELEASE_TAG'"' '"'$COMMIT_ID'"' '"'$RC_TAG'"'
}


node() {
job_id=$(echo $1)
pipeline_id=$(echo $2)
commit_id=$(echo $3)
releaseTag=$(echo $4)
commit_id=$(echo $5)
rc_tag=$(echo $6)

present_dir=$(pwd)
echo $present_dir

# Applying e2e-CRD
echo "***Applying e2e-crd***********"
kubectl apply-f openebs-openshift-e2e/script/utils/e2e-crd.yml

kubectl get pods -n openebs -o yaml | grep image | grep -v imageID | grep quay

bash openebs-openshift-e2e/script/utils/e2e-cr jobname:upgrade-control-plane jobphase:Waiting
bash openebs-openshift-e2e/script/utils/e2e-cr jobname:upgrade-control-plane jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" openebs_version:"$releaseTag"
bash openebs-openshift-e2e/script/utils/e2e-cr jobname:cstor-operator jobphase:Waiting
bash openebs-openshift-e2e/script/utils/e2e-cr jobname:migrate-cstor-pool jobphase:Waiting
bash openebs-openshift-e2e/script/utils/e2e-cr jobname:migrate-cstor-volume jobphase:Waiting

run_id="upgrade";test_name=$(bash openebs-openshift-e2e/script/utils/generate_test_name testcase=openebs-provision metadata=${run_id})
echo $test_name

git clone https://github.com/openebs/upgrade.git
cd upgrade/e2e-tests
echo "Running the e2e test.."

cp experiments/openebs-provision/run_e2e_test.yml upgrade_control_plane.yml

sed -i -e 's/imagePullPolicy: Always/imagePullPolicy: IfNotPresent/g' \
-e 's/provider: openebs-runner/provider: openebs-runner-upgrade/g' \
-e 's/name: e2e-openebs-runner/name: e2e-openebs-runner-deprovision/g' \
-e '/name: OPENEBS_VERSION/{n;s/.*/            value: '"'$releaseTag'"'/}' \
-e '/name: RC_TAG/{n;s/.*/            value: '"'$rc_tag'"'/}' \
-e '/name: COMMIT_ID/{n;s/.*/            value: '"'$commit_id'"'/}' upgrade_control_plane.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' upgrade_control_plane.yml

cat upgrade_control_plane.yml

bash ../../openebs-openshift-e2e/script/utils/e2e_job_runner label='provider:openebs-runner-upgrade' job=upgrade_control_plane.yml

echo "Dumping state of cluster post job run"; echo ""
bash ../../openebs-openshift-e2e/script/utils/dump_cluster_state;

cd ../..
bash openebs-openshift-e2e/script/utils/event_updater jobname:upgrade-control-plane $test_name jobid:"$job_id" pipelineid:"$pipeline_id"
#################
## GET RESULT  ##
#################
rc_val=$(echo $?)

## Check the test status & result from the e2e result custom resource
source ~/.profile
testResult=$(kubectl get e2eresult ${test_name} --no-headers -o custom-columns=:spec.testStatus.result)

current_time=$(eval $time)
bash openebs-openshift-e2e/script/utils/e2e-cr jobname:upgrade-control-plane jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" openebs_version:"$releaseTag" test_result:$testResult

if [ "$rc_val" != "0" ]; then
exit 1;
fi
}

if [ "$1" == "node" ];then
  node $2 $3 $4 $5 $6 $7
else
  pod
fi
